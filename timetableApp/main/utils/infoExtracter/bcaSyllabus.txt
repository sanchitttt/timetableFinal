BACHELOR IN COMPUTER APPLICATION
COURSE INFORMATION SHEET
Course Code: CA101
Course Title: SOLVING AND PROGRAMMING IN C
Pre-requisite(s): Basic Sciences
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: I/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. Understand the fundamentals of C programming.
2. Learn about different problems and the approach to solve them.
3. Gain proficiency with the fundamental concepts of the C programming
Language
4. Be able to apply these concepts to solve real world problems
5. Able to program in C programming for a given application
Course Outcomes
After the completion of this course, students will be able to:
CO1 Choose the loops and decision-making statements to solve the
problem.
CO2 Implement different Operations on arrays.
CO3 Use functions to solve the given problem.
CO4 Understand pointers, structures and unions.
CO5 Implement file Operations in C programming for a given application.

SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Problem Solving and Programming Concepts: Problem Solving in
Everyday Life, Types of Problem, Problem Solving with Computers.
Overview of C: History of C, Importance of C, Structure of C
program, Sample of C programs. Constant, Variable and Data types: C
Tokens – keywords, identifier, constant, string, and operators, and
symbols, Data types – primary data types, user defined data types, and
derived data types, Declaration of variables, assign values to variables.
Operators and Expressions: Different types of operators – arithmetic
operators, relational operators, logical operators, assignment operators,
increment and decrement operators, bitwise operators, conditional
operators and special operators, Arithmetic expressions – precedence
of arithmetic operators, Type conversions in expressions.
Managing input and output operations: Reading a character, Writing a character,
Formatted input, Formatted output.
10
Module – II
Decision making and Branching: Decision making with if statement
– Simple if statement, The if …. Else statement, Nesting of if …. Else
statement, The else if ladder, The switch statement, The ? : Operator,
The go-to statement.
Decision making and Looping: The while statement, The do statement, The for
statement, Jumps in loops.
10
Module – III
Arrays: One - dimensional arrays, Declaration of one – dimensional
arrays, Two – dimensional arrays, Declaration of two – dimensional
arrays, Multi – dimensional arrays.
Character Arrays and String: Declaring and initializing string
variables, Reading string from terminal, Writing string to screen,
Putting string together, Comparison of two strings, String handling
functions, Other features of strings.
7
Module – IV
User defined functions: A multi – function program, Definition of
function, Function calls, Function declaration, Category of functions,
Nesting of functions, Recursion, Passing arrays to functions, Passing
strings to functions
8
Module – V
Structures and Unions: Defining a structure, Declaring structure
variables, Accessing structure members, Arrays of structures, Arrays
within structures, Structures within structures, Structures and
functions, Union.
Pointers: Understanding pointers, Accessing the address of a
variable, Declaring pointer variables, Pointer expressions, Array of
pointers, Pointers to function, Pointers and structures.
File Management: Defining and opening a file, Closing a file,
Input/Output operations on files, Error handling during I/O operations
5
Text Books:
1. Balagurusamy E., “Programming in ANSI C”, 5thEdition, TMH, 2010.(T1)
2. Sprankle M., “Problem Solving and Programming Concepts”, 7thEdition, Pearson Education, New Delhi,
2006.(T2)
Reference Books:
1. Gottfried B. S., “Programming with C”, Schaum Series, McGraw Hill, 2005. (R1)
2. Kanetkar Y., “Let us C”, 4th Edition, BPB publication, New Delhi, 2002.(R2)
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping Between COs and Course Delivery (CD) methods
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CD
Code Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD7, CD 8
CD2 Tutorials/Assignments CO2 CD1 and CD9
CD3 Seminars CO3 CD1, CD2 and CD3
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2 2 3 2
CO2 3 3 3 1 3 1 1 1 2 2 2 2
CO3 3 3 3 3 3 1 2 2 1 1 2 2 3 2
CO4 3 3 3 1 3 1 1 1 1 2 2 3 2
CO5 3 3 3 3 3 1 1 1 1 1 1 2 2 2 3
Course Code: CA103
Course Title: LOGICAL ORGANIZATIONS OF COMPUTERS
Pre-requisite(s): Basic Electronics
Co- requisite(s):
Credits: 3 L:3 T:1 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: I/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. Understand the Truth Table.
2. Identify the number of variables and their simplification importance.
3. Understand different circuits for the implementation of Boolean equations.
4. Identify Register Transfer, Micro-operations and Central Processing Unit
5. Describe performance evaluation of computers, computer architecture and
organization, computer arithmetic, Memory and CPU design.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Minimize the circuit diagrams by use of K-Map concepts and Boolean
Algebra.
CO2 Analyse the outcome of the circuit designed.
CO3 Create complex circuit with use of modular block interconnection.
CO4 Analyse I/O system and interconnection structures of computer.
CO5 Develop independent learning skills and be able to learn more about
different computer architectures and hardware.
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Digital Logic Circuits: Digital Computers, Logic Gates, Boolean algebra,
Complement of a Function, Map Simplification, Product-of-sum simplification,
Don’t care conditions, Combinational Circuits, Half Adder, Full Adder, FlipFlops, Sequential Circuits.
10
Module – II
Digital Components: Integrated Circuits, Decoders, NAND Gate
Decoder, Encoders, Multiplexers, Registers, Register with parallel
load, Shift Registers, Bidirectional Shift register with parallel load,
Binary Counters, Binary counter with parallel load, Memory Unit,
RAM, ROM, Types of ROMs.
Data Representation: Data Types, Number System, Complements, Subtraction of
Unsigned Numbers, Fixed-Point Representation, Floating-Point Representation,
Other Binary Codes, Other Decimal Codes, Error Detection Codes
10
Module – III
Register Transfer and Micro-operations: Register Transfer
language, RegisterTransfer Bus and Memory Transfers, Three-State
Bus Buffers, MemoryTransfer, Arithmetic Micro- operations,
BinaryAdder, Binary Adder-Subtractor, Binaryincrementer, Arithmetic
Circuit Logic, Micro-operations, Shift Micro-operations,
HardwareImplementation, Arithmetic Logic Shift Unit.
7
Module – IV
Central Processing Unit: Introduction, General Register Organization,
Stack Organization, Register Stack, MemoryStack, Reverse Polish
Notation, Evaluation of Arithmetic Expressions, InstructionFormats,
AddressingModes, Data Transfer and Manipulation, ProgramControl,
ProgramInterrupt, Types of Interrupts, Reduced Instruction Set
Computer (RISC).
8
Module – V
Memory Organization: Memory Hierarchy, Main Memory, RAM and
ROM Chips, Memory Address Map, Memory Connection to CPU,
Auxiliary Memory, Magnetic Disks and Tape, Associative Memory,
5
Hardware Organization, March Logic, Read/Write Operation, Cache
Memory, Associative Mapping, Direct Mapping, Set-Associative
Mapping, Virtual Memory, Address Space and Memory Space,
Address Mapping Using Pages, Associative Memory Page Table, Page
Replacement, Memory Management Hardware.
Text Books:
1. Mano M., “Computer System Architecture”, Prentice Hall of India, New Delhi, 1995.(T1)
Reference Books:
1. Morris Mano M & Ciletti M.D., “Digital Design”, 4th Edition, PHI, 2008.(R1)
2. Hayes, J.P., “Computer Architecture and Organization”, 3rdEdition, McGraw-Hill, London, 2000,
(R2)
3. Ram. B., “Computer Fundamentals: Architecture and Organization”, 3rdEdition, New Age
International Publication, New Delhi, 2000.(R3)
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty

Mapping of Course Outcomes onto Program Outcomes
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CD
Code Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD7, CD 8
CD2 Tutorials/Assignments CO2 CD1 and CD9
CD3 Seminars CO3 CD1, CD2 and CD3
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2 2 3 2
CO2 3 3 3 1 3 1 1 1 2 2 2 2
CO3 3 3 3 3 3 1 2 2 1 1 2 2 3 2
CO4 3 3 3 1 3 1 1 1 1 2 2 3 2
CO5 3 3 3 3 3 1 1 1 1 1 1 2 2 2 3
Course Code: MT123
Course Title: BUSINESS COMMUNICATIONS
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:1 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: I/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. Analyze and demonstrate writing and speaking processes through invention,
organization, drafting, revision, editing, and presentation.
2. Understand the importance of specifying audience and purpose and to select
appropriate communication choices.
3. Interpret and appropriately apply modes of expression, i.e., descriptive,
expositive, Narrative, scientific, and self-expressive, in written, visual, and
oral communication
4. Participate effectively in groups with emphasis on listening, critical and
reflective thinking, and responding.
5. Develop the ability to research and write a documented paper and/or to give
an oral presentation.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Apply business communication strategies and principles to prepare effective
communication for domestic and international business situations.
CO2 Utilize analytical and problem-solving skills appropriate to business
communication.
CO3 Participate in team activities that lead to the development of collaborative
work skills.
CO4 Select appropriate organizational formats and channels used in developing
and presenting business messages
CO5 Communicate via electronic mail, Internet, and other technologies and
deliver an effective oral business presentation.

SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction to Business Communication: Importance and Objectives of
Business communication, Process of communication, Barriers to effective
communication, Techniques of effective communication. Forms of communication
(Written, Oral, audio-visual communication).
10
Module – II
Managing Business Communication: Formal and Informal communication,
Non- verbal communication (Body language, Gestures, Postures, Facial
expressions). The cross-cultural dimensions of business communication.
Techniques to effective listening, methods and styles of reading.
10
Module – III
Other aspects of communication:
Vocabulary: Single word substitution, Idioms and phrases, Precis writing,
Comprehension.
Group Discussions, Extempore, Principles of effective speech and
presentations, Role- playing
7
Module – IV
Introduction to managerial writing:
Business letters: Inquiries, Circulars, Quotations, Orders,
Acknowledgement, Claims & adjustments, Collection letters, Sales
letters, Drafting of different resumes, Covering letters Applying for a
job, Social correspondence, Invitation to speak.
Official Correspondence: Memorandum, Notice, Agenda, Minutes, Circular
letters.
8
Module – V
Report writing and Technical Proposals:
Business reports, Types, Characteristics, Importance, Elements of
structure, Process of writing, Order of writing, the final draft,
checklists for reports.
Technical proposals, Definitions, types and format.
5
Text Books:
1. “Communication Skills”, Sanjay Kumar &PushpLata, Oxford University Press. (T1)
2. “Business Correspondence and Report Writing”,R.C.Sharma, Krishna Mohan,
McGraw Hill. (T2)
3. “Communication for Business”,Shirley Taylor, V.Chandra, Pearson. (T3)

Reference Books:
1. “Business Communication”, HorySankar Mukherjee, Oxford University Press. (R1)
2. “Basic Business Communication”, Lesikar I Flatley, McGraw Hill.(R2)
3. “Business Communication Today”,Bovee, Thill and Chaterjee, Pearson. (R3)
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty

Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2 3 3 2
CO2 3 3 3 1 3 1 1 1 2 2 3 2
CO3 3 3 3 3 3 1 2 2 1 1 2 3 3 2
CO4 3 3 3 1 3 1 1 1 1 2 2 3 2
CO5 3 3 3 3 3 1 1 1 1 1 1 2 3 3 2
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CD Course Delivery methods
Course
Outcome Course Delivery Method
CD1
Lecture by use of boards/LCD
projectors/OHP projectors CO1 CD1,CD2,CD3
CD2 Tutorials/Assignments CO2 CD1,CD2,CD3
CD3 Seminars CO3 CD1,CD2,CD3
CD4 Mini projects/Projects CO4 CD1,CD2,CD3,CO4 CD5
CD5 Laboratory experiments/teaching aids CO5 CD1,CD2,CO5
CD6 Industrial/guest lectures
CD7 Industrial visits/in-plant training
CD8
Self- learning such as use of NPTEL
materials and internets

CD9 Simulation
Course Code: CE101
Course Title: ENVIRONMENTAL SCIENCE
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L:2 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: I/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. To develop basic knowledge of ecological principles and their applications
in environment.
2. To identify the structure and composition of the spheres of the earth, the
only planet sustaining life.
3. To analyse, how the environment is getting contaminated and probable
control mechanisms for them.
4. To generate awareness and become a sensitive citizen towards the changing
environment.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Explain the structure and function of ecosystems and their importance in the
holistic environment.
CO2 Identify the sources, causes, impacts and control of air pollution.
CO3 Distinguish the various types of water pollution happening in the
environment and understand about their effects and potential control
mechanisms.
CO4 Judge the importance of soil, causes of contamination and need of solid
waste management.
CO5 Predict the sources of radiation hazards and pros and cons of noise pollution.

SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Ecosystem and Environment: Concepts of Ecology and Environmental science,
ecosystem: structure, function and services, Biogeochemical cycles, energy and
nutrient flow, ecosystem management, fate of environmental pollutants,
environmental status and reports on climate change.
10
Module – II
Air Pollution: Structure and composition of unpolluted atmosphere, classification
of air pollution sources, types of air pollutants, effects of air pollution, monitoring
of air pollution, control methods and equipment for air pollution control, vehicular
emissions and control, indoor air pollution, air pollution episodes and case studies.
10
Module – III
Water Pollution: Water Resource; Water Pollution: types and Sources
of Pollutants; effects of water pollution; Water quality monitoring,
various water quality indices, water and waste water treatment:
primary, secondary and tertiary treatment, advanced treatments (nitrate
and phosphate removal); Sludge treatment and disposal.
7
Module – IV
Soil Pollution and Solid Waste Management: Lithosphere – composition, soil
properties, soil pollution, ecological & health effects, Municipal solid waste
management – classification of solid wastes, MSW characteristics, collection,
storage, transport and disposal methods, sanitary landfills, technologies for
processing of MSW: incineration, composing, pyrolysis.
8
Module – V
Noise pollution & Radioactive pollution: Noise pollution: introduction, sources:
Point, line and area sources; outdoor and indoor noise propagation, Effects of
noise on health, criteria noise standards and limit values, Noise measurement
techniques and analysis, prevention of noise pollution; Radioactive pollution:
introduction, sources, classification, health and safety aspects, Hazards associated
with nuclear reactors and disposal of spent fuel rods-safe guards from exposure to
radiations, international regulation, Management of radioactive wastes.
5
Text Books:
1. A, K. De., “Environmental Chemistry”, New Age Publications India Ltd., 3rd Edition,
2008.(T1)
2. R. Rajagopalan,“Environmental Studies: From Crisis to Future”, 3rd Edition, Oxford
University Press, 2016.(T2)
3. Eugene P. Odum., “Fundamentals of Ecology”, 3rd Edition, WB Sunders Company,
Philadelphia, 1971.(T3)
4. C. N. Sawyer, P. L. McCarty and G. F. Parkin, “Chemistry for Environmental
Engineering and Science”, John Henry Press, 2002.(T4)
5. S.C. Santra,“Environmental Science”, New Central Book Agency, 2011. (T5)
Reference Books:
1. D.W. Conell,“Basic Concepts of Environmental Chemistry”, CRC Press.(R1)
2. Peavy, H.S, Rowe, D.R, Tchobanoglous, G.,“Environmental Engineering”, Mc-Graw
- Hill International. (R2)
3. G.M. Masters & Wendell Ela,“Introduction to Environmental Engineering and
Science”, PHI Publishers, 1991.(R3)
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Explain the structure and function of ecosystems and their importance in the holistic environment.
2. I d e nt i f y t h e so u r c e s , c a u se s, im p a c t s a n d c o nt r o l o f a i r p o l lu t i o n
3. Distinguish the various types of water pollution happening in the environment and understand about their effects and potential control mechanisms.
POs met through Gaps in the Syllabus
3, 4, 12, 13, 14
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2
CO2 3 3 3 1 3 1 1 1 2
CO3 3 3 3 3 3 1 2 2 1 1 2
CO4 3 3 3 1 3 1 1 1 1 2
CO5 3 3 3 3 3 1 1 1 1 1 1 2
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CD Course Delivery methods
Course
Outcome
Course
Delivery
Method
CD1 Lecture by use of boards/LCD projectors/OHP projectors CO1 CD1, CD2
CD2 Tutorials/Assignments CO2 CD1, CD2
CD3 Seminars CO3 CD1, CD2
CD4 Mini projects/Projects CO4 CD1, CD2
CD5 Laboratory experiments/teaching aids CO5 CD1, CD2
CD6 Industrial/guest lectures

CD7 Industrial visits/in-plant training

CD8 Self- learning such as use of NPTEL materials and internets

CD9 Simulation


Course Code: CA104
Course Title: MATHEMATICS-I (ELEMENTARY MATHEMATICS)
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: I/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. Get an understanding about set and relations.
2. Demonstrate a depth of understanding of functions and binary operations.
3. Gain an understanding of Abstract Algebra and Matrices.
4. Get a brief idea about the principles of Differential Calculus and Differential
Equations.
5. Be able to solve differential equations and differential calculus problems.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Decide the behaviour of set and relations in the field of computer science.
CO2 Apply the concepts of functions and binary operations in various computer
programs.
CO3 By using the properties of Algebra and Matrices to decide the behaviour
different problems
CO4 Apply the principles of Differential Calculus and Differential Equations to
solve a variety of scientific problems in engineering and sciences.
CO5 Enhance and develop the ability of using the language of mathematics in
engineering.
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Sets and Relations: Sets and their representations, The empty set,
Finite and Infinite set, Equal and equivalent set, Subset; powerset;
Universalset; Venndiagrams; Operations on sets; Complement of a set;
Cartesian product, Relation, Inverse Relation, Composition of relation,
Equivalence of relations and Classes.
10
Module – II
Functions and Binary Operations: Functions as a set, Representation
of function, Types of Functions, Functions applicable in Computer
Science: Integer function, Factorial function, Absolute, Characteristic,
Floor, Ceiling, Remainder, Boolean, Exponential, Logarithmic,
Hashing functions and Binary operation on a set.
10
Module – III
Abstract Algebra: Group, Subgroup, Order of group, cyclic group and
Simple theorems, Ring, Integral domain, Field and Simple theorem
related to Integral domain and field.
7
Module – IV
Matrices Algebra: Definition of matrix, Operations on matrices,
Square matrix and its inverse, Inverse of a matrix by Row operation,
Rank of matrix by Echelon form, Solution of a System of Linear
Simultaneous equation by matrix method, Eigen value and Eigen
vector, Caley Hamilton theorem (without proof), to find the inverse of
a non-singular matrix using Caley-Hamilton theorem.
8
Module – V
Differential Calculus: Successive differentiation, Leibnitz
Theorem, Partial derivative, Partial derivative of Higher orders,
Homogeneous function, Euler’s Theorem on Homogeneous
functions.
Differential equation: Definition of Differential equation,
Order and degree of a differential equation, Linear differential
equation and Equation of Higher Order Linear differential
equation with constant coefficients, Partial differential
equations, Order and degree of partial differential equation,
Lagrange’s Linear Equations, Linear Homogeneous partial
5
differential equation.
Text Books:
1. Vasishtha A.R., “Modern Algebra”, Krishna Prakashan Media (P) Ltd, Meerut,
2006.(T1)
2. Vasishtha A.R, “Matrices”, Krishna Prakashan Media (P) Ltd, Meerut, 2006. (T2)
3. DasH.K., “Advanced Engineering Mathematics”, S. Chand, 2009.(T3)
Reference Books:
1. KolmanB., BusbyR. C., and RossS. C., “Discrete Mathematical Structures”, 6th
Edition, Prentice Hall of India, 2008.(R1)
2. ShethH., “Abstract Algebra”, PHI, 2009.(R2)
3. GrewalB. S., “Higher Engineering Mathematics”, Khanna Publishers, 2000.(R3)
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty

Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2 2 2 2
CO2 3 3 3 1 3 1 1 1 2 2 3 2
CO3 3 3 3 3 3 1 2 2 1 1 2 2 3 2
CO4 3 3 3 1 3 1 1 1 1 2 3 2 3
CO5 3 3 3 3 3 1 1 1 1 1 1 2 3 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CD
Code Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD7, CD 8
CD2 Tutorials/Assignments CO2 CD1 and CD9
CD3 Seminars CO3 CD1, CD2 and CD3
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA102
Course Title: PROBLEM SOLVING AND PROGRAMMING IN C LAB
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: I/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. To learn computer language.
2. To Learn coding for problems.
3. To learn the problem-solving process through computer.
4. To know the limitations of system during program execution.
5. To know the practical application of various programming techniques.
Course Outcomes
After the completion of this course, students will be able to:
CO1 To formulate simple algorithms for arithmetic and logical problems.
CO2 To translate the algorithms to programs.
CO3 To test and execute the programs and correct syntax and logical errors.
CO4 To apply programming to solve simple numerical method problems,
differentiation of function and simple integration.
CO5 To decompose a problem into functions and synthesize a complete program using
divide and conquer approach.

SYLLABUS
List of Programs as Assignments:
1. Write an interactive program that will read in a +ve integer value and determine the
following
i) If the integer is a prime number ii) If the integer is a Fibonacci number
2. WAP in C to compute sinx = x – x3
/3! + x5
/3! – x7
/7! ….. Continue adding successive
terms in the series until the value of the next term becomes smaller (in magnitude)
than 10-5. Test the program for x = 1, x = 2, and x = 3. In each case display the
number of terms used to obtain the final answer.
3. WAP to generate every 3rd integer beginning with I = 2 and continue for all integers
that are less than 150. Calculate the sum of those integers that are evenly divisible by
5.
4. WAP to find whether a given year is a leap year or not. Modify it to generate a list of
leap years between two year limits given by user.
5. WAP to display the following pattern:
11
11 10 11
11 10 9 10 11
11 10 9 8 9 10 11
6. Using Ternary / Conditional operator find the greatest among 3 numbers.
7. WAP to convert a decimal number into an equivalent number of the input base. Test
your program for base 2,8,10 & 16.
8. WAP to read a number n, and print it out digit-by-digit, as a series of words. For e.g.
123 would be printed as “one two three”.
9. WAP to check whether any input +ve integer is palindrome or not.
10. WAP to simulate a simple calculator (+ - / * %) that takes two operands and an
operator as input and displays the result.
11. WAP to find the GCD of two input +ve integer numbers.
12. WAP to swap the values of two variables without using a third variable.
13. Read a line of mixed text, and then write it out with all lower case and uppercase
letters reversed, all digits replaced by 0s and all other characters (non-letters and nondigits) replaced by ‘*’.
14. WAP to find the product of two matrices A and B. Display the source matrices and
product matrix C in matrix format.
15. WAP to find whether a given matrix is a triangular matrix or not.
16. WAP to find the transpose of a matrix. Display the source and the transposed matrix
in matrix format.
17. Implement Prob. No. – 14 to 16 using functions for reading, manipulating and
displaying the corresponding matrices in matrix form.
18. WAP to sort a list of strings alphabetically using a 2-dim. Character array.
19. WAP to display the row sum and the column – sum of an input 2- dim. Matrix.
Display the source matrix with row and column sum.
20. Write a recursive function to calculate S = 2 + 4 + 6 + 8 + …… +2N. Implement the
function in a complete C program.
21. Write a function that accepts two arguments an array and its size n. It performs
Bubble up sort on the array elements. Using indirection operator ‘*’ implement this in
a complete C program. Display the source and the sorted array.
22. Using pointer, write a function that receives a character string and a character as
argument. Delete all occurrences of this character in the string. The function should
return corrected string with no holes.
23. Write a function for reading character string using pointer. Calculate the length of the
string (without using strlen ()). Finally print the string in reverse order, using pointer.
24. Implement prob. No. 14 using pointers representation of 2 – dim. array.
25. Implement prob. No. 15 using pointer representation of 2 dim. array.
26. Implement prob. No. 16 using pointer representation of 2 dim. array.
27. WAP to sort a list of strings into alphabetical order using array of pointers.
28. Create records of 60 students, where each record has fields-name, roll, gpa and fees.
Write a function update () to reduce the fees of those students who have obtained gpa
greater than 8.5 by 25% of the original fees. Write a complete program to exercise
this function in the main program and display all the records before and after
updation.
29. Define a structure that describes a hotel. It should have members that include the
name, address, grade, average room charge and number of rooms. Write a function to
perform the following operations:
a) To print out hotels of a given grade in order of charges.
b) To print out hotels with room charges less than a given value.
30. WAP to concatenate the contents of two files into a third file.
31. WAP to copy the content of one file into another file. Names of both the files are to
be input as command line arguments

Text Books:
1. Jery R Hanly, “Problem solving and Program design in C”, Paerson Education, 7th
Edition. (T1)
2. Byron Gottfried, “Schaum's Outline of Programming with C”, McGraw-Hill. (T2)
3. E. Balaguruswamy, Programming in ANSI C, Tata McGraw-Hill. (T3)
4. R.G.Dromey, How to Solve it by Computer, Pearson Education. (T4)
Reference Books:
1. Brian W. Kernighan and Dennis M. Ritchie, “The C Programming Language”,
Prentice Hall India Learning Private Limited.(R1)
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: 180
Course Title: OFFICE AUTOMATION TOOLS
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: I/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. To learn automation tools
2. To understand the basic of basic technology
3. To learn the problem-solving process through computer.
4. To know the limitations of automation
5. To know the practical application of various automation tools
Course Outcomes
After the completion of this course, students will be able to:
CO1 To solve real time problems using automation tools
CO2 To translate the real time problem into automation problem
CO3 To analyse the basic application of automation tools.
CO4 To apply different tools for different automation problems
CO5 To decompose a real-time problem into a small automation problems.

SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I

COMPUTER SCIENCE & OPERATING SYSTEMS
(WINDOWS/LINUX)
1. Types of Computer: Analog, Digital, and Hybrid type,
Hardware, Software, System software, Application
software, Stored Program Concept and Von Newman
Architecture, Firm ware, Human ware, Stored Program
Concept, Evolution of computers, Generation of
computer.
2. Data Processing: Data collection, Classifications,
Sorting and Merging, Processing, Summarizing Storing.
3. Data Organisation: Organization Data, Character,
Field, Record, File, Database, Sequential Access,
Random Access, Indexed Sequential Access.
4. Data Communication: Local Area Network, Wide
Area Network, Satellite Communication, Internet.
5. Operating System: Introduction, Different Operating
Systems, Loading and Quitting the Operating Systems
Important DOS/Windows/Linux Commands.
10
Module – II
WINDOWS/Linux
1. Windows Introduction,
2. Concepts different Operating System GUI/CUI.
3. Desktop Icons. (Windows / Desktop Linux)
4. My Computer, Recycle Bin, Internet Explorer, Network
Neighbourhood, My Documents
5. Working with windows: How to create a Folder, Copying and
cutting files, Renaming
6. Programs, Favourites, Documents, Settings, Find, Run, Shut down
7. APPLICATION ICONS
8. Introduction to Output Devices
10
Module – III
PERSONAL COMPUTER SOFTWARE TOOLS (MS WORD, EXCEL
1. Open Office Word Processing using MS WORD: An
introduction to MS-Word / ON INTRODUCTION TO
WORD/Writer.
2. The Word work space, Starting and quitting word,
7
Creating and Manipulating Various documents, Editing
of proofing files, Merging documents and macros.
3. How to use Mouse and Menu, Working with dialog box
4. Primary Command in File Menu: The Open Commands,
The File name commands, The New commands, The
Save, Save As, and Save all commands, The Close
command, The Page setup, The Print commands, The
Exit commands
5. Edit Menu commands: The Cut, Copy, and Paste
commands, The Undo and Repeat commands
6. Format commands: Font commands, Paragraph commands
7. Other Menu: The view menu, The Insert menu, The tool
menu, The table menu, The Window menu
Module – IV
EXCEL
1. BUILDING A SIMPLE WORKSHEET
2. Entering Text, Entering Values, Entering
 Dates and Times, Moving
Around, Selecting Ranges, Using Menu, Using
3. Tool Bar, Using Shortcut Menus, Changing Entries,
Copying Entries, Moving Entries, Inserting and Deleting
cells
4. FORMATTING BASICS
5. Changing Character Style, Changing Alignment, Changing Column
Width
6. WORKING WITH MULTIPLE WORKSHEET
7. Copying entries between work books, Moving sheets
between work books, Deleting sheets, Quitting Excel
8. OPENING EXISTING WORKBOOKS
9. Simple calculations, Doing Arithmetic, Totalling column
of values, Naming cells and Ranges
10. FORMATTING TEXT
11. Displaying dollars and cents, Formatting decimal places,
dates Format, Copying style and formats
12. FORMULAS THAT MAKE DECISIONS
13. Using the IF function, Using the nested IF function, Copying
formulas
14. Checking Spelling, Printing Worksheets, Preview Worksheets,
Setting up the pages,
15. Sorting data, Keeping Leading in View, Finding records,
Adding and deleting Records, Filtering Records
16. Plotting charts, Sizing and moving charts, Updating
charts, changing the chart type, Using chart auto format
17. Creating Macros, Recording Macros, Running Macros
8
Module – V 5
POWER POINT
1. Main Features of Power Point
2. MAKING THE PRESENTATION
3. Creating Template with the Auto Content Wizard.
Creating a Presentation with a Template. Creating a
presentation from Scratch
4. DIFFERENT VIEWS
5. Normal Slide, Outline, Slide Sorter, Slide Show, Notes, Slide Master
6. ANIMATION, ART AND SOUND
7. Controlling Transitions between slides.
Animating Different Parts of a slide. Inserting a Motion Clip.
8. Sounds in slides.
9. INCLUDING GRAPHS, CHARTS, TABLES AND COLUMNS
10. Organization Chart Slide, Creating a table Slide.
Creating two column Slide, Module 1: Showing A
Presentation,
11. Rehearsing/ Timing a Presentation, Designation some
slides as “Hidden”, Viewing Slides Anywhere in a Slide
Show.
12. Techniques for Making a Show Livelier
13. OFFICE CONNECTIONS
14. Presenting with the help of other Office Programs
Importing the text from a World Document.
15. Printing a Presentation
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Introduction to graphics and animation tool.
2. Multimedia Introduction.
POs met through Gaps in the Syllabus
1,2,3,4
Topics beyond syllabus/Advanced topics/Design
1. Animation.
2. App development.
POs met through Topics beyond syllabus/Advanced topics/Design
 3, 5, 7, 8,
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA155
Course Title: DATA STRUCTURES
Pre-requisite(s): C/C++; Knowledge of programming languages
Co- requisite(s): DS Lab
Credits: 4 L:3 T:1 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: I/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To know details about the data structure.
B. Applications, advantages and limitations of various data structures.
C. Real life use of various data structures.
D. Implementations of various data structures.
E. Analyse and compare the different algorithms
Course Outcomes
After the completion of this course, students will be able to:
1. Understand the properties of various data structures
2. Identify the strength and weaknesses of different data structures
3. Design and employ appropriate data structures for solving computing
problems
4. Analyze and compare the efficiency of algorithms
5. Solve computing problems independently

SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Algorithms and Analysis of Algorithms: Definition, Structure and Properties
of Algorithms, Development of an Algorithm, Data Structures and Algorithms,
Data Structure – Definition and Classification, Efficiency of Algorithms,
Asymptotic Notations, Polynomial Vs Exponential Algorithms, Average, Best
and Worst case Complexities, Open source software development process.
10
Module – II
Arrays, Stacks and Queues: Array Operations, Number of Elements in an
Array, Representation of Arrays in Memory, Applications of Array, StackIntroduction, Stack Operations, Applications of Stack, Queues-Introduction,
Operations on Queues, Circular Queues, Other Types of Queues, Applications
of Queues.
10
Module – III
Linked List, Linked Stacks and Linked Queues: Singly Linked Lists,
Circularly Linked Lists, Doubly Linked Lists, Applications of Linked Lists,
Introduction to Linked Stack and Linked Queues, Operations on Linked Stacks
and Linked Queues, Implementations of Linked Representations, Applications
of Linked Stacks and Linked Queues.
7
Module – IV
Trees, Binary Trees, BST, AVL Trees and B Trees: Trees: Definition and
Basic Terminologies, Representation of Trees, Binary Trees: Basic
Terminologies and Types, Representation of Binary Trees, Binary Tree
Traversals, Threaded Binary Trees, Applications. Introduction, BST: Definition
and Operations, AVL Trees: AVL Definition and Operations, B Trees:
Introduction, m-way search trees: Definition and Operations.
8
Module – V
Sorting and searching: Introduction, Radix sort, Shell Sort, Quick Sort,
Heap Sort. Searching: Introduction, Binary Search, Transpose Sequential
Search, Interpolation Search.
5
Text Books:
1. BalujaG S, “Data Structure through C”, Ganpat Rai Publication, New Delhi, 2015.
2. PaiG A V, “Data Structures and Algorithms: Concepts, Techniques and Applications”, 2nd Edn,
Tata McGraw-Hill, 2008.
3. Horowitz E., Sahni S., Susan A., “Fundamentals of Data Structures in C”, 2nd Edition, University
Press, 2010.
Reference Books:
1. TremblayJ. P., SorensonP. G, “An Introduction to Data Structures with Applications”, 2nd Edn,
McGraw-Hill, Inc. New York, NY, USA.
2. Lipschutz Seymour, “Data Structures”, 6th Edn, 9th Reprint 2008, Tata McGraw-Hill.
3. Drozdek Adam, “Data Structures and Algorithms in C++”, Thomson Learning, New Delhi –
2007.
4. FellerJ., FitzgeraldB., “Understanding Open Source Software Development”, Pearson Education
Ltd. New Delhi
Gaps in the Syllabus (to meet Industry/Profession requirements)
• Introduced programming skills for real time applications.
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
• Topics related to real world application/ problem should be introduced.
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50

Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA157
Course Title: DISCRETE STRUCTURES
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: II/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. Use appropriate set, function, or relation models to analyse practical examples,
interpret the associated operations and terminology in context.
B. Determine number of logical possibilities and probability of events.
C. Learn logic and proof techniques to expand mathematical maturity.
D. Formulate problems precisely and explain their reasoning clearly.
E. Solve the problems, apply formal proof techniques
Course Outcomes
After the completion of this course, students will be able to:
1. To formulate problems precisely
2. Solve the problems, apply formal proof techniques, and explain their
reasoning clearly.
3. Illustrate by example, basic terminology and model problems in computer
engineering using graphs and trees
4. Analyse problems precisely and explain their reasoning clearly.
5. Solve the problems, apply formal proof techniques

SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Sets and Propositions: Sets, Operations of sets, Finite and Infinite sets,
Principle of inclusion and exclusion, Propositions, Conditional Propositions,
Logical Connectivity, Propositional calculus, Universal and Existential
Quantifiers, Normal forms, Mathematical Induction.
10
Module – II
Relations and Functions: Relations, Properties of Binary Relations, Closure of
relations, Warshall’s algorithm, Equivalence relations. Functions, Types of
functions, Composition of functions, Invertible functions.Permutations and
Combinations, Pigeonhole Principle, Recurrence Relation.
10
Module – III
Partially Ordered Sets: Introduction, Elements of Partially Ordered Sets, Lattices.
7
Module – IV
Graph Theory and Trees: Basic terminology, representation of a graph in
computer memory, Relations and Digraphs, Paths in Relations and Digraphs,
Shortest path in weighted graphs (Dijkstra’s algorithm). Basic terminology and
characterization of trees, Tree traversal, Spanning trees, Minimal Spanning
trees(Introduction).
8
Module – V
Groups, Rings and Fields: Groups, Semi Groups, Monoids, Subgroups,
Isomorphism and Homomorphism and Normal Subgroups, Rings, Integral
Domain, Rings Homomorphism, Polynomial Rings, Fields.
5
Text Books:
1. KolmanB., BusbyR. and RossS., “Discrete Mathematical Structures”, 6th Edition,
PearsonEducation, 2002, ISBN 81-7808-556-9.
2. DeoN., “Graph Theory with application to Engineering and Computer Science”, Prentice Hall of
India, 1990, 0 – 87692 – 145 – 4.
3. JohnsonbaughR., “Discrete Mathematics”, 5th Edition, Pearson Education, 2001 ISBN 81 – 7808
– 279 – 9.
Reference Books:
1. BiggsN., “Discrete Mathematics”, 3rd Edition, Oxford University Press, ISBN 0 –19 – 850717 –
8.
2. RosenKenneth H., “Discrete Mathematics and its Applications”, 6th edition, McGraw-Hill, 2007,
ISBN 978-0-07-288008-3.
3. LipschutzSemyour & Lipson Marc, “Discrete Mathematics”, McGraw-Hill, 3rd Special Indian
Edition, ISBN-13: 978-0-07-060174-1.
4. LiuC. L. and MohapatraD. P., “Elements of Discrete Mathematics”, SiE Edition, Tata McGrawHill, 2008, ISBN 10:0-07-066913-9.
5. LipschutzS. and LipsonM., Schaum's Outline of Discrete Mathematics, Revised Third Edition,
Tata McGraw Hill, 2010.
6. MottJ. L., KandelA. and BakerT. P., Discrete Mathematics for Computer Scientists and
Mathematicians, 2nd Edition, Prentice Hall of India, 2001.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA160
Course Title: OPERATING SYSTEM CONCEPTS
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: II/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. Present the main components of OS and their working
B. Introduce the concepts of process and thread and their scheduling policies
C. Handling synchronization of concurrent processes and deadlocks
D. Analyze the different techniques for managing memory, I/O, disk and files
E. Design the components of operating system
Course Outcomes
After the completion of this course, students will be able to:
1. Understand the general architecture of computer system.
2. Understand, contrast and compare differing structures for operating
systems
3. Gain proficiency needed to analyse theory and implementation of:
processes, scheduling, I/O and files systems.
4. Be familiar with various types of operating systems including Unix /Linux
5. Get in-depth knowledge of memory management for operating systems
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction & System Structures: What Operating Systems do, Computer
System Organisation, Computer System Architecture: Single Processor
Systems, Multiprocessor Systems, Clustered Systems, Operating System
Structure, Operating System Operations, Distributed Systems, Special Purpose
Systems, Computing Environments, Open-Source Operating Systems, Operating
System Services, User Operating System Interface, System Calls, Types of
System Calls, System Programs, Operating System Design and Implementation:
Design Goals, Mechanisms and Policies, Implementation, Operating System
Structure: Simple Structure, Layered Approach, System Boot.
10
Module – II
Process Management: Process Concept, Operations on Processes, Process
Scheduling- Basic Concepts, Scheduling Queues, Schedulers, Pre-emptive
Scheduling, Dispatcher, Scheduling Criteria, Scheduling Algorithms.
10
Module – III
Deadlock Handling: System Model, Deadlock Characterization, Methods for
Handling Deadlocks, Deadlock Prevention, Deadlock Avoidance, Deadlock
Detection, Recovery from Deadlock.
7
Module – IV
Memory Management: Background, Swapping, Contiguous Memory
Allocation, Paging, Structure of the Page Table, Segmentation.
File Management: File Concept, Access Methods, Directory & Disk Structure,
File System Mounting, File Sharing, Protection, File System Structure, File
System Implementation, Directory Implementation, Allocation Methods, Free
Space Management.
8
Module – V
Secondary Memory Management: Overview of Mass Storage Structures,
Disk Structure, Disk Scheduling, Disk Management.
Case Study- The Linux System: Linux History, Design Principles, Kernel
Modules, Process Management, Scheduling (except Symmetric
Multiprocessing), Memory Management (except Virtual Memory), File
Systems, Input & Output.
5
Text Books:
1. SilberschatzA., GalvinP.B. & GagneG., “Operating System Concepts”, 8th Edition, Wiley India,
2012.
Reference Books:
1. DeitelH.M., “Operating Systems”, 3rd Edition, Prentice-Hall of India, 2006.
2. TanenbaumA.S., “Modern Operating Systems”, 2nd Edition, Prentice-Hall of India, 2010.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Page Replacement Algorithms
2. Case Study of any OS.
3. Applications of advance memory management.
POs met through Gaps in the Syllabus
3, 4, 12, 13
Topics beyond syllabus/Advanced topics/Design
1. Distributed Operating Systems
2. Design of access matrix.
3. Design of kernel model of Linux OS.
4. Application design of Virtual Memory.
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty

Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA158
Course Title: NUMERICAL AND STATISTICAL METHODS
Pre-requisite(s): Programming knowledge and High-level Mathematics
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: II/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. Able to map a problem in the computer domain so that with the help of
computer it can be Solved.
B. To develop skill to represent and solve a problem in Computer
C. Able to understand the basic of computing methodologies that done with
computers.
D. To develop understanding of basic of computation methodologies
E. Understating the functionality of Abstract machines with their limitations
Course Outcomes
After the completion of this course, students will be able to:
1. Identify problems in the computer domain.
2. Explain the basic of computing methodologies that done with computers
3. Evaluate basic computation methodologies
4. Analyse functionality of Abstract machines with their limitations
5. Apply computing methodologies that are done with computers.

SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Errors in Numerical Methods: Concept of Exact and Approximate Numbers,
Significant Figures, Rounding off rules, Absolute, Relative and Percentage
Errors, General Error Formula.
Solution of Algebraic and Transcendental Equations: Basic Concepts,
Geometrical Interpretation (if any), Condition for Convergence, Rate of
Convergence, Bisection Method, Method of False Position or Regula-Falsi
Method, Method of Iteration, Newton Raphson Method.
10
Module – II
Interpolation : Finite Differences, Forward Difference Operator, Backward
Difference Operator, Central Difference Operator, Shift Operator – Properties of
the Operators, Relation among the Operators, Differences of a Polynomial,
Newton’s Forward and Backward Difference Interpolation Formulae, Gauss’
Central Difference Interpolation Formulae, Lagrange’s Interpolation, Divided
Differences and their properties, Newton’s general interpolation formula with
divided difference, Inverse interpolation using Lagrange’s interpolation formula.
10
Module – III
System of Linear Algebraic Equations: Matrix Inversion Method, Gauss
Elimination Method, Gauss Jordan Method, LU Decomposition Method, GaussJacobi Method, Gauss –Seidel Method.
Numerical Differentiation and Integration: Numerical Differentiation,
Numerical Integration, Derivation of General Quadrature Formula., Trapizoidal
Rule, Simpson’s 1/3- Rule, Simpson’s 3/8- Rule.
Numerical Solution of Ordinary Differential Equations: Solution by
Taylor’s Series, Euler’s Method, Modified Euler’s Method, Runge-Kutta
Methods (2nd order)
7
Module – IV
Concepts of Probability: Experiment and Sample Space, Events and
Operations with Events, Probability of an Event, Basic Probability Rules,
Applications of Probability Rules, Conditional Probability.
Random Variables: How Random Variable Arise, Probability Distribution of a
Random Variable, Mean or Expected Value of a Random Variable, Probability
Histogram Value of a Random Variable, Variance and Standard Deviation of a
Random Variable.
Binomial Experiments: Structure of a Binomial Experiment, Binomial
Probability Distribution, Use of Binomial Probability Table.
8
Normal Curve and Normal Distribution: Motivation behind a Normal Curve,
Properties of a Normal Curve, Normal Probability Distribution, Areas Under a
Normal Curve.
Module – V
Estimation of Population Parameters: Parameter and Statistic, Point and
Interval Estimation, Interval Estimation of Three Common Parameters.
Bivariate Quantitative Data- Correlation and Regression: Concepts of a
Bivariate Data Set, Correlation Coefficient, Inferences on a Population
Correlation Coefficient, The Regression line, Inferences on the Population
Regression Line.
5
Text Books:
1. SastryS.S., “Introductory Methods of Numerical Analysis”, PHI, Private Ltd., New Delhi.
2. PalN. & SarkarS., “Statistics: Concepts and Applications”, PHI, New Delhi, 2005.
Reference Books:
1. HoggR.V. et.al, “Probability and Statistical Inpane”, 7th Edn, Pearson Education, New Delhi,
2006.
2. BurdenR.L. & FairesJ.D., “Numerical Analysis”, Thomson Learning-Brooks/Cole,
IndianReprint, 2005.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA156
Course Title: DATA STRUCTURES LAB
Pre-requisite(s): C/C++; Knowledge of programming languages
Co- requisite(s):
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: II/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To assess how the choice of data structures and algorithm design methods
impact the performance of programs.
B. To choose the appropriate data structure and algorithm design method for a
specified application.
C. To solve problems using data structures such as linear lists, stacks, queues,
hash tables, binary trees, heaps, binary search trees, and graphs and writing
programs for these solutions.
D. Analyse and compare the different algorithms
Course Outcomes
After the completion of this course, students will be able to:
1. Be able to design and analyze the time and space efficiency of the data
structure
2. Analyze run-time execution of previous learned sorting methods, including
selection, merge sort, heap sort and Quick sort
3. Have practical knowledge on the applications of data structures
4. Be capable to identity the appropriate data structure for given problem

SYLLABUS
1. Program to Find the Number of Elements in an Array
2. Develop and Implement a menu driven program in C for the following Array operations
a. Creating Array of N Integer elements.
b. Display of Array elements with suitable headings.
c. Inserting an element (ELEM) at a given valid position (POS).
d. Deleting an element at a given valid position (POS).
e. Exit
3. Programs for Stack, Queues and Circular Queues using Arrays
4. Program to convert an Infix Expression into Postfix and Postfix Evaluation
5. Program to implement stack using arrays
6. Program to implement stack using linked list
7. Program to implement multiple stack in a single array
8. Program to convert infix notation to postfix notation using stacks
9. Program to implement queue using arrays
10. Program to implement queue using pointers
11. Program to reverse elements in a queue
12. Program to implement circular queue using arrays
13. Program to create add remove & display element from single linked list
14. Program to create add remove & display element from double linked list
15. Program to count number of nodes in linear linked list
16. Program to create add remove & display element from circular linked list
17. Programs to implement stack & queues using linked representation
18. Program to concatenate two linear linked lists
19. Program to accept a singly linked list of integers & sort the list in ascending order.
20. Program to reverse linked list
21. Program to represent polynomial using linked list
22. Program to add two polynomials using linked list
23. Program for the creation of binary tree, provide insertion & deletion in c
24. Program for pre-order, post-order & in-order traversals of a binary tree using non recursive.
25. Program to count no, of leaves of binary tree
26. Program for implementation of B-tree (insertion & deletion)
27. Program for implementation of multi-way tree in c
28. Program for implementation of AVL tree
29. Program to implement bubble sort program using arrays
30. Program to implement merge sort using arrays
31. Program to implement selection sort program using arrays
32. Program to implement insertion sort program using arrays
33. Program to implement topological sort using arrays
34. Program to implement heap sort using arrays
35. Program to implement heap sort using pointers
36. Program to implement bubble sort program using pointers
37. Program to implement linear search using pointers
38. Program to implement binary search using pointers
39. Program to implement linear search using arrays
40. Program to implement binary search using arrays

Text Books:
1. Baluja G S, “Data Structure through C”, Ganpat Rai Publication, New Delhi, 2015.
2. Pai G A V, “Data Structures and Algorithms: Concepts, Techniques and Applications”, 2nd Edn,
Tata McGraw-Hill, 2008.
3. Horowitz E., Sahni S., Susan A., “Fundamentals of Data Structures in C”, 2nd Edition, University
Press, 2010.
Reference Books:
1. Tremblay J. P., Sorenson P. G, “An Introduction to Data Structures with Applications”, 2nd Edn,
McGraw-Hill, Inc. New York, NY, USA.
2. Lipschutz Seymour, “Data Structures”, 6th Edn, 9th Reprint 2008, Tata McGraw-Hill.
3. Drozdek Adam, “Data Structures and Algorithms in C++”, Thomson Learning, New Delhi –
2007.
4. Feller J., Fitzgerald B., “Understanding Open Source Software Development”, Pearson
Education Ltd. New Delhi
Gaps in the Syllabus (to meet Industry/Profession requirements)
Introduction of advanced programming concept keeping in view industry requirement.
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
Practical orientation programming should be given emphasis
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA161
Course Title: OPERATING SYSTEM LAB
Pre-requisite(s): C/C++; Knowledge of programming languages
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: II/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
F. Present the main components of OS and their working
G. Introduce the concepts of process and thread and their scheduling policies
H. Handling synchronization of concurrent processes and deadlocks
I. Analyze the different techniques for managing memory, I/O, disk and files
J. Design the components of operating system
Course Outcomes
After the completion of this course, students will be able to:
5. Understand the general architecture of computer system.
6. Understand, contrast and compare differing structures for operating
systems
7. Gain proficiency needed to analyse theory and implementation of:
processes, scheduling, I/O and files systems.
8. Be familiar with various types of operating systems including Unix /Linux
5. Get in-depth knowledge of memory management for operating systems

SYLLABUS
1. Implement in C the following UNIX commands using System calls : cat and mv
2. WAP in C to Determine the size of a file using the lseek command.
3. WAP to calculate the number of blocks assigned for the file.
4. Write a C program that deletes a directory with all its subfolders. The name of the
directory should be read from the command line.
5. Write a program that deletes every 5th byte from a file, but without using a
temporary file or allocating a buffer in the memory.
6. WAP in C to implement FCFS CPU scheduling Algorithm.
7. WAP in C to implement SJF CPU scheduling Algorithm.
8. WAP in C to implement Priority CPU scheduling Algorithm.
9. WAP in C to implement Round Robin ( RR ) CPU scheduling Algorithm.
10. WAP in c to read from the buffer & produce desired output.
11. WAP ii C to create Userid & Password.
12. WAP in c to implement and find how many Users currently login in NetWork.
13. WAP in c to create your won system call just like a copy.
14. WAP in c to create your won system call just like a delete.
15. WAP in c to find the Disk Space.
16. WAP In C to find The number of pages in the process.
17. WAP In C to find The number of frames allocated to the process.
18. WAP in c to find the no. of blocks occupied by a file.
19. WAP in c to create your won system call just like a delete.
20. WAP in c to create your won system call just like a ls.
21. WAP in c to find a PID no. of any Process.
Gaps in the Syllabus (to meet Industry/Profession requirements)
4. Shell Programming under Linux OS
5. Case Study of any OS.
6. Applications are of Linux OS.
POs met through Gaps in the Syllabus
3, 4, 12, 13
Topics beyond syllabus/Advanced topics/Design
5. Distributed Operating Systems
6. Design of access matrix.
7. Design of kernel model of Linux OS.
8. Application design of Virtual Memory.
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA159
Course Title: NUMERICAL AND STATISTICAL METHODS LAB
Pre-requisite(s): C/C++; Knowledge of programming languages
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: II/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
F. Present the main components of OS and their working
G. Introduce the concepts of process and thread and their scheduling policies
H. Handling synchronization of concurrent processes and deadlocks
I. Analyze the different techniques for managing memory, I/O, disk and files
J. Design the components of operating system
Course Outcomes
After the completion of this course, students will be able to:
5. Understand the general architecture of computer system.
6. Understand, contrast and compare differing structures for operating
systems
7. Gain proficiency needed to analyse theory and implementation of:
processes, scheduling, I/O and files systems.
8. Be familiar with various types of operating systems including Unix /Linux
5. Get in-depth knowledge of memory management for operating systems

SYLLABUS
1. Implement in C the following UNIX commands using System calls : cat and mv
2. WAP in C to Determine the size of a file using the lseek command.
3. WAP to calculate the number of blocks assigned for the file.
4. Write a C program that deletes a directory with all its subfolders. The name of the
directory should be read from the command line.
5. Write a program that deletes every 5th byte from a file, but without using a
temporary file or allocating a buffer in the memory.
6. WAP in C to implement FCFS CPU scheduling Algorithm.
7. WAP in C to implement SJF CPU scheduling Algorithm.
8. WAP in C to implement Priority CPU scheduling Algorithm.
9. WAP in C to implement Round Robin ( RR ) CPU scheduling Algorithm.
10. WAP in c to read from the buffer & produce desired output.
11. WAP ii C to create Userid & Password.
12. WAP in c to implement and find how many Users currently login in NetWork.
13. WAP in c to create your won system call just like a copy.
14. WAP in c to create your won system call just like a delete.
15. WAP in c to find the Disk Space.
16. WAP In C to find The number of pages in the process.
17. WAP In C to find The number of frames allocated to the process.
18. WAP in c to find the no. of blocks occupied by a file.
19. WAP in c to create your won system call just like a delete.
20. WAP in c to create your won system call just like a ls.
21. WAP in c to find a PID no. of any Process.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure

Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA201
Course Title: OBJECT ORIENTED PROGRAMMING USING JAVA
Pre-requisite(s): Introduction to Structured Programming
Co- requisite(s): JAVA Lab
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: III/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. Learn about Object oriented programming concepts
B. Learn how to use the JDK
C. Improve their programming skills in core Java
D. Use the Java packages, applets for software development
E. Use the knowledge of object-oriented programming through Java
Course Outcomes
After the completion of this course, students will be able to:
1. Elaborate the use of JDK of various versions for programming
2. Identify the latest know-how related to the new developments in the field of
Java
3. Apply the knowledge gained for their project work as well as to develop some
GUI applications.
4. Design solutions in JAVA
5. Apply features of Advanced Java through programming

SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Procedure-Oriented Programming, Object-Oriented programming, Benefits of
OOP, Applications of OOP, Basics, Evolution of Java, Structure of JAVA
Program, Simple Java Program, Tokens, Comments, Identifiers, Operators,
Literals, Control Structures. Java Environment Setup, Compiling a Java
Program, Java Virtual Machine, Philosophy of Java and Benefits.
10
Module – II
Data types and program statements: Primitive and reference data types,
variables and constants, enumerated constants, labelled statement, expression
and null statements, compound statement, control statement – decision and
loops, jump statement, declaration statement, try-throw-catch-finally statement,
declaring and creating arrays, accessing array elements, assigning values to
array elements, multidimensional arrays.
10
Module – III
Functions, Data Abstraction and classes: Declaration, definition and call,
main method arguments, reference variables, method overloading, parameter
passing by value for primitive types, object references and arrays, scope of
variables, return from methods.
Class and object, class members and initialization, access rights of members –
public, private and protected access modifiers, constructor and copy constructor,
mutability, finalization, dynamic memory management, garbage collection, this
keyword, static members, scope of variables, interface – declaration,
implementation and extending, package and package visibility.
7
Module – IV
Inheritance and Collection classes: multi-level and single inheritance, multiple
inheritance of interfaces, Object class, access rights in subclasses and packages,
constructor calling sequence, super keyword, dynamic binding of methods,
abstract class, overriding, shadowing and hiding, finalize, association,
aggregation and composition.
String, StringBuffer, Date, Calendar, Math, Object, Class, Exception class
8
Module – V
Input/Output and JAVA Applets: Stream clases – InputStream, OutputStream,
Buffered Stream, file classes and handling, pushback streams, reader and writer
5
classes, file reader and writer, serialization.
Applet code example, HTML tags for applet, applet life cycle, color, font andbasic
GUI handling, basic graphics, and animation.
Text Books:
1. Balagurusamy E., “Programming in Java”, 2nd Edition, Tata McGraw Hill Publication, New
Delhi.
Reference Books:
1. Naghton Patrick & Schildt H., “The Complete Reference Java 2”, Tata McGraw Hill
Publication, New Delhi.
2. Dietel Harvey M & Dietel Paul J., “Java How to program”, 7th edition, Pearson Education, New
Delhi.
Gaps in the Syllabus (to meet Industry/Profession requirements)
7. Multithreading process in Java.
8. Detailed applet programming.
9. Handling available Java applications as case studies for better understanding.
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
9. Concepts of multithreading in Java
10. Detailed knowledge on GUI designs in Java
11. Database connectivity with front end
POs met through Topics beyond syllabus/Advanced topics/Design
3, 4, 5, 6
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA203
Course Title: DATABASE MANAGEMENT SYSTEMS
Pre-requisite(s): Introduction to Structured Programming
Co- requisite(s): JAVA Lab
Credits: 4 L:3 T:1 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: III/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To understand the structure of databases
B. To learn Query processing and decomposition.
C. To understand how to create a database
D. To learn transaction processing in databases
E. To understand how concurrency control is performed in a database.
F. To understand fault tolerance and reliability of database.
Course Outcomes
After the completion of this course, students will be able to:
1. Design a database for a given set of requirements.
2. Use SQL.
3. Apply normalization techniques on given database.
4. Have knowledge of ‘indexing and hashing’ mechanisms in a database
management system.
5. Have idea of the backend activities involved in extracting data from a
database.Have knowledge of transaction and concurrency control
mechanisms in a database management system.

SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction: Purpose of Database Systems, View of Data, Data Models,
Database Languages, Relational Database, Database Architecture, Database
Users and Administrators, Transaction Management.
10
Module – II
Relational Data Models and Languages: Basic Concepts, Constraints, Keys,
Entity-Relationship Diagram, Weak Entity Sets, Extended E-R Features,
Reduction of an E-R Diagram to Tables, The Relational Algebra, The Tuple
Relational Calculus and The Domain Relational Calculus.
10
Module – III
Relational-Database Design: Pitfalls in Relational-Database Design,
Functional Dependencies, Decomposition, Desirable Properties of
Decomposition, First Normal Form, Second Normal Form, Third normal
Form, Boyce-Codd Normal Form, Fourth Normal Form and More Normal
Forms.
7
Module – IV
Query Processing and Optimization: Overview, Measures of Query Cost,
Selection Operation, Join Operation, Other Operations, Evaluation of
Expressions, Transformation of Relational Expressions, Estimating Statistics of
Expression Results, and Choice of Evaluation Plans.
8
Module – V
Transactions and Concurrency Control: Transaction Concept, Transaction
State, Desirable Properties of Transactions, Concurrent Executions,
Serializability, Recoverability, Lock-Based Protocols, Timestamp-Based
Protocols and Deadlock Handling.
5
Text Books:
1. Silberschatz, Korth, & Sudarshan, “Database System Concepts”, 6th Edition, McGraw Hill, 2011.
Reference Books:
1. Elmasri, & Navathe, “Fundamentals of Database Systems”, 5th Edition, Pearson Education, 2008.
2. Date C.J., “An Introduction to Database System”, Pearson Education, New Delhi, 2005.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Course Code: CA202
Course Title: OBJECT ORIENTED PROGRAMMING USING JAVA LAB
Pre-requisite(s): INTRODUCTION TO STRUCTURED PROGRAMMING
Co- requisite(s): Java Lab
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: III/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. Learn about Object oriented programming concepts
B. Learn how to use the JDK
C. Improve their programming skills in core Java
D. Use the Java packages, applets for software development
E. Use the knowledge of object-oriented programming through Java
Course Outcomes
After the completion of this course, students will be able to:
1. Elaborate the use of JDK of various versions for programming
2. Identify the latest know-how related to the new developments in the field of
Java
3. Apply the knowledge gained for their project work as well as to develop some
GUI applications.
4. Design solutions in JAVA
5. Apply features of Advanced Java through programming

SYLLABUS
1. WAJP to show the characteristic of a number. {E.g. 24 it has two coefficients 2 in tens
position and 4 in units position. It is composed of 2 and 3. It is a positive number. Also
show whether it is odd or even.
2. WAJP to take input through command line argument and do the following:
a) Check whether the number is prime.
b) Generate the reverse a number.
3. Write a menu driven program using switch in Java to perform following:
a) For input of 1, check whether the number is prime
b) For input of 3, find the factors of the number
c) For input of 5, check the number is odd or even.
4. Write a program in Java to generate hexadecimal equivalent of a number without using array.
5. WAJP to take two number inputs through command line argument and do the following:
a) Check whether two numbers are prime to each other or not.
b) Find LCM of two numbers.
6. WAJP to create a class and exhibit the role of static functions (other than main) by declaring,
defining and calling them.
7. WAJP to compute and display the count of occurrence of 4 in a number. E.g. 4564 will compute 2.
8. WAJP to take an angle value in degrees and then compute the equivalent radians and then prove
sin 2   cos2  1. Note180o  
c
.
9. WAJP to sort a list of numbers in ascending order.
10. WAJP to generate Pascal’s Triangle using a square matrix.
11. Write a program in Java to take input of two 3×3 matrices through command line argument and
then:
a) Add them up and display the result
b) Subtract them and display the result
c) Multiply them and display product
12. WAJP to count the number of words, characters in a sentence.
13. Write a program in Java to take input of a sentence through command line argument and then
count the number of words and vowels.
14. WAJP to handle the Exception using try and multiple catch block; the exceptions that you will
handle are, number format error, array bound error and divide by zero.
15. WAJP to create a class called Room with two data member length and width and then implement
constructor overloading in it.
16. Write a program in Java to explain the role of the following:
a) Non-parameterized constructor
b) Parameterized constructor
c) Copy constructor
Page 68 of 243
Take input and display the output.
16. WAJP to create a class called Fraction with data member numerator and
denominator; take input (through command line argument) of two fractions and then
add, subtract, multiply and divide, finally display the result in reduced term.
17. Write a program in Java to create a class for Employee having 2 data member code
and name. Then create 3 classes Officer, AdminStaff and MStaff. The Officer class
has data members designation and pay-scale; the AdminStaff has data members grade
and pay-band; the MStaff has data member department and two sub-classes Regular
and Casual. The Regular staff has data members level and consolidated-pay and
Casual has data member daily-wage. Take all inputs through constructors and write
appropriate methods for displaying one data for each type of class.
18. WAJP to design a class called Account using the inheritance and static that show all
function of bank (withdrawal, deposit) and generate account number dynamically.
19. WAJP to design an application Password.java that produces and prints a random
password depending upon name of an individual. If the input is Abdul Kalam then the
password would be 33421LAM. Note: take the first name A=1, B=2, D=4, U=21
where 2+1=3, and L=12, where 1+2=3; so the number comes to be 12433, so u can
find out.
20. WAJP to draw a format like *
***
*****
 *******
 *****
 ***
 *
21. WAJP to take a string count all vowels and then delete the same from the string.
22. Write a Patient class which inherits from the Person class. Patient can again be of
two types, indoor and outdoor. The Patient class requires the following:
a) a variable to store the patient ID for the patient
b) a variable to store the department of hospital
c) a variable to store the ward of hospital
d) a variable to store the patient 's date of joining the hospital
e) a variable to store the patient 's address
f) a variable to store the medical fees that the patient pays
g) constructor methods, which initialize the variables
h) a method to calculate the medical fees (for both indoor and outdoor patient)
23. WAJP to take a string as password and check whether it contains at least two
Page 69 of 243
numbers, 3 alphabets and no space in it. If any contrary throw message.
24. Write a program in Java to create a class called Rational having two data members for
numerator and denominator. Take two inputs of rational numbers and perform
multiplication and division. Display the result in reduced form.
25. Write a program in Java to print a format like, * * * * * * *
* * * * *
* * *
*
26. Write a class called Shape which contains a user-defined interface for
Computation, which contains methods for calculation of area, perimeter and
volume. Write four classes for circle, rectangle, sphere and rectangular
parallelepiped, and all these classes inherit from Shape. Now take input for the
following:
a) radius of circle and compute its area and perimeter
b) Length and breadth of rectangle and compute its area and perimeter
c) Length, breadth and height for rectangular parallelepiped and compute
its area and volume
d) Radius of sphere and compute its area and volume
** Area of circle= r
2
 , perimeter of circle= 2r , area of sphere= 4r
2
 , volume of sphere=
4 r
3
 , volume
3
of rectangular parallelepiped = l  b  h area of rectangular parallelepiped= 2(l  b  b 
h  h  l)
27. Write a class called Employee, which requires the following:
a) a variable to store the employee ID
a. employee ID should be of format EMPM1234, EMPS1234,
EMPA1234, EMPC1234, where M=manager, S=supervisor,
A=analyst, C=clerk; number can be any no. but first three
characters should be EMP
b) a variable to store the employee name
c) a variable to store department
d) a variable to store city
e) a variable to store basic salary
f) a method to calculate the salary of employee
a. if the city is metro then the HRA would be 30% else 20%
b. if the employee ID contain M then DA would be 120%, if S then
DA would be 110%, if A then DA would be 100%, and if C then
DA would be 90%
g) constructor methods, which initialize the variables
28. WAJP to create 4 threads and show exhibit their execution after the call of the “start
( )” method.
 Write a program in Java to create 3 threads and exhibit their behaviour by changing their
priorities in the “main” thread. Display the possible output.
Page 70 of 243
Gaps in the Syllabus (to meet Industry/Profession requirements)
10. Multithreading process in Java.
11. Detailed applet programming.
12. Handling available Java applications as case studies for better understanding.
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
12. Concepts of multithreading in Java
13. Detailed knowledge on GUI designs in Java
14. Database connectivity with front end
POs met through Topics beyond syllabus/Advanced topics/Design
3, 4, 5, 6
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
Page 71 of 243
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 72 of 243
Course Code: CA204
Course Title: DATABASE MANAGEMENT SYSTEMS LAB
Pre-requisite(s): INTRODUCTION TO STRUCTURED PROGRAMMING
Co- requisite(s): Java Lab
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: III/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To understand the structure of databases
B. To learn Query processing and decomposition.
C. To understand how to create a database
D. To learn transaction processing in databases
E. To understand how concurrency control is performed in a database.
F. To understand fault tolerance and reliability of database.
Course Outcomes
After the completion of this course, students will be able to:
1. Design a database for a given set of requirements.
2. Use SQL.
3. Apply normalization techniques on given database.
4. Have knowledge of ‘indexing and hashing’ mechanisms in a database
management system.
5. Have idea of the backend activities involved in extracting data from a
database.Have knowledge of transaction and concurrency control
mechanisms in a database management system.

Page 73 of 243
SYLLABUS
List of Programs as Assignments:
Consider the following tables:
emp(empno,ename,job,mgr,hiredate,sal,comm,deptn
o,gr), dept(deptno,dname,loc)
Write the following queries:
1. List all information about all department from emp table.
2. List all employee names along with their salaries from emp table.
3. List all department numbers, employee numbers and their managers numbers
in descending order of deptno from emp table.
4. List department names and locations from the dept table.
5. List the employees belonging to the department 20.
6. List the name and salary of the employees whose salary is more than 1000.
7. List the names of the clerks working in the department 20.
8. List the names of analysts and salesmen.
9. List the details of the employees who have joined before the end of September 81.
10. List the names of employees who are not managers.
11. List the names of employees whose employee number are 7369, 7521, 7839, 7934,
7788.
12. List the employee details not belonging to the department 10, 30, and 40.
13. List the employee name and salary, whose salary is between 1000 and 2000.
14. List the employee names, who are not eligible for commission.(salary having
>15,000 eligible for commission)
15. List the employees who are eligible for commission.
16. List the details of employees, whose salary is greater than 2000 and commission is NULL.
17. List the employees whose names start with an “S” (not”s”).
18. List the name, salary and PF amount of all the employees(PF is calculated as 10% of
salary).
19. List the empno, ename, sal in ascending order of salary.
20. List the employee name, salary, job and Department no descending order of
Department No and salary.
21. List the employee details in ascending order of salary.
22. List the employee details in descending order of salary
23.Display name, and sal and commission of all employees whose monthly salary
is greater than their commission.
24. Select SMITH HAS WORKED IN THE POSITION OF CLERK IN
DEPT 20.Display result in this format.
25. Generate a statement which prompts the user at runtime. The
intention is to display employees hired between 2 given dates.
26. Define a variable representing an expression used to calculate total annual
remuneration. Use the variable in a statement which finds all employees who earn
$30000 a year or more.
Page 74 of 243
27. List all the employees name and salaries increased by 15% and
expressed as a whole number of dollars.
28.Produce the following
EMPLOYEE AND JOB
SMITH CLERK
ALLEN SALESMAN
29. Produce the
following
output:
SMITH ( Clerk)
ALLEN ( Salesman)
30. Do a case sensitive search for a list of employees with a job that the user enters.
31. It has been discovered that the sales people in dept. 30 are not all male.
Please produce the Followingoutput.
ENAME DEPTNO JOB
ALLEN 30 Sales Person
32. Display each employees name and hiredate of dept 20.
33. Display each employees name, hiredate and salary review date. Assume
salary review date is one year from hiredate. Output should be in ascending
review date.
34. Print list of employees displaying just salary, if more than 1500. If exactly
1500 display “ On Target”. If less than 1500 display “ Below 1500”.
35. Write a query which returns DAY of the week ( i.e. MONDAY) for any
date entered in the format DD/MM/YY.
36. Write a query to calculate length of service of each employee.
37. Find the minimum salary of all employees.
38. Find the maximum, minimum, and average salaries of all employees.
39. List the maximum and minimum salary of each job type.
40. Find how many managers are in each dept.
41. Find the average salary and average total remuneration of each job type.
Remembers sales man earn commission.
42. Find out the difference between highest and lowest salary.
43. Find all department s which have more than three employees.
44. Check whether all employee nos are unique. ( No Duplicate)
45. List lowest paid employee working for each Manager. Exclude any groups
where the minimum salary is less than 1000. Sort the output by salary.
46. Produce a list showing employees ‘salary grade’.(> 10000 A, >10000 &<20000 B,
>20000 C)
47. Show only employee on Grade C.
48. Show all employee in Dallas.
49. List the employees name, job, salary, grade and department for everyone in the
company except clerks. Sort on salary, displaying the highest first.
50. List the following details of employees who earn $36000 a year or who are clerks.
Page 75 of 243
Ename Job Annual Sal Dept no Dname Grade
51. Display all employees who earn less than their managers.
52. Display all employees by name and eno along with their managers name and number.
53. Modify above spoliation to display KING who has no MANAGER.
54. Find the job that was files in the first half of 1983 and the name job that was
filled in the same period in 1984.
55. Find all employees who have joined before their manager.
EMPLOYEE HIREDATE MANAGER HIREDATE
56. Find the employees who earn the highest salary in each job, type, sort in
descending order of salary.
57. Find the employees who earn the minimum salary for their job,
Display the result in descending order of salary
.
58. Find the most recently hired employees in the department. Order by hiredate.
59. Show the details of any employee who earns a salary greater than the
average for their department. Sort in department number order.
60. List all department where there are no employees.
TEXT BOOK
 1.SQL, PL/SQL the programming Language of Oracle, Ivan Bayross, 4th edition
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
Page 76 of 243
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 77 of 243
Course Code: CA255
Course Title: FUNDAMENTALS OF COMPUTER ALGORITHMS
Pre-requisite(s): Knowledge Of Basic Mathematics (Graph Theory) And Data Structures
Co- requisite(s):
Credits: 4 L: 3 T: 1 P: 0
Class schedule per week: 04
Class: BCA
Semester / Level: IV/2
Branch: BCA
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
6. To understand basic algorithm designing techniques such as recursion, greedy,
backtracking and branch and bound.
7. To analyze the asymptotic performance of an algorithm.
8. To demonstrate a familiarity with algorithms and data structures..
9. To apply important algorithmic design paradigms and methods of analysis in solving
real life problems.
10. To Synthesize efficient algorithms in common engineering design situations.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Students will be able to have a clear understanding on solving the problems
systematically.
CO2 Students will be able to make use of linear and non-linear data structures, like,
graphs and trees while designing algorithms.
CO3 Students will be having a clear understanding of different design paradigms..
CO4 Students will be able to analyze and measure the efficiency of an algorithm
CO5 Students will have basic knowledge of fundamentals of algorithms which would
help them to take up an advanced course in the same field.

Page 78 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
 Introduction:
What is an algorithm? Design and performance analysis of algorithms, space and
time trade-offs. Analysis of selection sort and insertion sort. Asymptotic notations
(O, θ, Ώ,ωο) to measure complexity of algorithms.
8
Module – II
Recursion:
Basic concept. Analysis of recursive algorithms, Master's theorem. Divide &
Conquer: The general method. binary search, finding the maximum and minimum,
merge sort, quick sort, Best and worst case analysis for the mentioned algorithms.
8
Module – III
The Greedy Method:
The general method. Applications to Knapsack problem, minimum weight
spanning trees: Prim’s & Kruskal’s algorithms. Dijkstra's algorithm for finding
single source shortest paths problem.
8
Module – IV
Algorithms on Graphs:
Breadth First Search, Depth First Search, Biconnectivity, Depth First Search of a
Directed Graph, Topological Sorting.
8
Module – V
Basic concepts of Backtracking:
8-queen problem, Branch and Bound: 0/1 Knapsack problem, assignment problem.
8
Page 79 of 243
Text Books:
1. CormenThomas H., LeisersonCharles E., & Rivest.Ronald L., “Introduction to Algorithms
PHI publication.
2. Horowitz Ellis, Sahni Sartaj and Rajasekaran S., “Fundamentals of Computer Algorithms”
Galgotia publications.
Reference Books:
3. Aho Alfred V., Hopcroft John E. & Ullman Jeffrey D., “The Design & Analysis of Computer
Algorithms”, Addison Wesley Publications.
4. Kleinberg Jon & Tardos Eva, “Algorithm Design”, Pearson Education Publications.
5. Brassard Gilles & Bratley Paul, “Fundamentals of Algorithms”, PHI Publications.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Dynamic Programming design paradigm.
POs met through Gaps in the Syllabus
3, 4, 5
Topics beyond syllabus/Advanced topics/Design
NIL
POs met through Topics beyond syllabus/Advanced topics/Design
N.A.
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Students’ Feedback on Course Outcome.

Page 80 of 243
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 2 1 2 3 3 3 3
CO2 3 1 1 1 1 3 1 1 2 1 2 3 3 3 3
CO3 2 3 3 1 2 1 2 2 2 1 2 3 3 3 3
CO4 1 1 3 3 1 1 1 1 2 1 2 3 3 3 3
CO5 3 3 3 1 2 1 1 2 2 1 3 3 3 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CD
Code Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD2, CD 8
CD2 Tutorials/Assignments CO2 CD1, CD2, CD8
CD3 Seminars CO3
CD1, CD2, CD3,
CD5, CD8
CD4 Mini Projects/Projects CO4 CD1, CD3, CD8
CD5 Laboratory Experiments/Teaching Aids CO5
CD1, CD2, CD3,
CD8
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 81 of 243
Course Code: CA256
Course Title: WEB PROGRAMMING
Pre-requisite(s): HTML, XML
Co- requisite(s): Web Programming Lab
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: IV/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To learn about basics of web programming
B. Learn HTML, Java Script, XML for scripting
C. Learn web based programming using ASP.NET
D. Learn PHP based programming
E. Learn Making static and dynamic websites
Course Outcomes
After the completion of this course, students will be able to:
6. Know the fundamentals of web programming
7. Identify .NET technology and framework
8. Elaborate on the web based programming
9. Perform web based programming.
10. Design static and dynamic websites

Page 82 of 243
SYLLABUS
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction to Internet and HTML: Introduction to Internet, Internet
Services, Web Server, Web Client, Domain Registration, Internet Security.
HTML Tags, HTML Documents, Header Section, Body Section, Headings,
Link Documents using Anchor Tag, Formatting Characters, Font tag, Images
and Pictures, Listing, Tables in HTML.
8
Module – II
Java Script:Data Types, Variables, Operators, Conditional Statements, Array
Objects, Date Objects, String Objects, Use of Java Script in Web Pages,
Advantages of Java Script, Type Casting, Array, Operators and Expression,
Conditional Checking, Function, User Defined Function.
8
Module – III
Understanding XML: Overview of XML, XML Families of Technology,
Creating XML Documents, Rules for Well-Formed XML, Discerning Structure,
Working with Mixed content, Adding Comments, CDATA Sections, Creating a
DTD-The Concept of a Valid XML Document, Creating a DTD for an existing
XML File.
8
Module – IV
ASP .NET: Building Web Forms Using ASP .NET, Exploring ASP .NET Server
Controls, Using ASP
.NET Server Controls to Create Web Forms, Understanding the Code behind the
Page. Working with User Controls, Exposing User Control Properties and
Methods, Using ASP .NET Server Controls in User Controls, Using Validation
Controls to Improve Web Forms, Uploading Files to a Web Server.
8
Module – V
PHP: Preparing the Use PHP, Exploring PHP for the First Time, Understanding
PHP Basics, Displaying PHP Output, Managing PHP Program Flow. Planning a
PHP Web Application, Creating and Using a Logon Window, Managing System
Data, Updating a PHP Web Application.
8
Page 83 of 243
TEXT BOOKS
1. XavierC., “Web Technology & Design”, New Age International Publishers, 1st
Edn, New Delhi, 2004.
2. BaiXue, Ekedahl Michael, FarrellJoyce, GosselinDon, ZakDiane, KaparthiShashi,
MacintyrePeter, Morrissey Bill, “The Web Warrior Guide to Web Programming”,
India Edition, Thomson Education.
REFERENCE BOOK
1. RossIvan Bay, “Web Enable Commercial Application Using HTML, DHTML”,
BPB Publication.
Gaps in the Syllabus (to meet Industry/Profession requirements)
13. Detailed learning of HTML and XHTML
14. Detailed learning of JavaScript
15. Detailed learning of XML
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
15. Concepts of XSLT
16. Knowledge about Active Server Pages
17. Designing interactive server pages
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Page 84 of 243
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 85 of 243
Course Code: CA258
Course Title: SOFTWARE ENGINEERING
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: IV
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students :
1. To understand the importance, limitations and challenges of processes involved
insoftware development
2. To gain knowledge of various software models.
3. To learn about software requirements analysis and specification
4. To gain knowledge of various software design activities
5. To learn cost estimation, software testing, maintenance and debugging.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Identify the difference of software engineering discipline with the other
engineering disciplines
CO2 Elaborate knowledge of various software models
CO3 Analyse about software requirements analysis and specification
CO4 Infer from knowledge of various software design activities.
CO5 Implement cost estimation, software testing, maintenance and debugging.
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction: S/W Engineering Discipline-Evolution and Impact, Program vs
8
Page 86 of 243
S/W Product
Emergence of S/W Engineering. Software Life Cycle Models: Waterfall,
Prototyping, Evolutionary, Spiral models and their comparisons. Software Project
Management: Project Manager responsibilities, Project Planning, Project Size
Estimation Metrics, Project estimation Techniques, COCOMO, Staffing Level
Estimation, Scheduling, Organization& Team Structures, Staffing, Risk
Management, S/W Configuration Management.
Module – II
Requirements Analysis and Specification: Requirement Gathering and Analysis,
SRS Software Design: Overview, Cohesion and Coupling, S/W Design
Approaches, Object-Oriented vs. Function-Oriented Design. Function-Oriented
S/W Design: SA/SD Methodology, Structured Analysis, DFDs, Structured Design,
Detailed Design
8
Module – III
Object Modelling Using UML: Overview, UML, UML Diagrams, Use Case
Model, Class Diagrams
etc.Object-Oriented Software Development: Design Patterns, Object-Oriented
analysis and Design Process, OOD Goodness Criteria. User Interface Design:
Characteristics, Basic Concepts, Types, Components Based GUI Development,
User Interface Design Methodology
8
Module – IV
Coding and Testing: Coding, Code Review, Testing, Unit Testing, Black Box
Testing, White-Box Testing, Debugging, Program Analysis Tools, Integration
Testing, System Testing, General Issues. Software Reliability and Quality
Management: S/W Reliability, Statistical Testing, S/W Quality, S/W Quality
Management System, ISO 9000, SEI CMM, Personal Software Process, Six Sigma
8
Module –V
Software Maintenance: Characteristics, S/W Reverse Engineering, S/W
Maintenance Process Models, Estimation of Maintenance Cost.
8
Text Books:
1. MallRajib, “Fundamentals of Software Engineering”, PHI, 2005
Reference Books:
Page 87 of 243
1. Pressman, “Software engineering A Practitioner’s Approach”, MGH.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. It is not possible to teach students all the methods and practices employed by practitioners.
2. Software engineering is dynamic disciplines that have continuous growth in research in
identifying new methods, tools and methodologies that have cause vast improvement in
software development and maintenance to be more reliable and efficient.
3. To improve the quality of software are increasing due to the competition in software
industry and the complexity of software development
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
1. Model-driven software development
2. Aspect-oriented software development
3. Software engineering for security
4. Metamodeling
5. UML profiles
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome Program Outcomes (POs) Program
Specific
Page 88 of 243
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 2 2 3 3
CO2 3 1 1 1 1 3 1 1 2 2 3 2
CO3 2 3 3 1 2 1 2 2 1 1 2 3 2 3
CO4 1 1 3 3 1 1 1 1 1 1 2 3 2 2
CO5 3 3 3 1 2 1 1 2 1 1 1 2 3 3 2
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD7, CD 8
CD2 Tutorials/Assignments CO2 CD1 and CD9
CD3 Seminars CO3 CD1, CD2 and CD3
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 89 of 243
Course Code: CA257
Course Title: WEB PROGRAMMING LAB
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: IV/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To learn about basics of web programming
B. Learn HTML, Java Script, XML for scripting
C. Learn web based programming using ASP.NET
D. Learn PHP based programming
E. Learn Making static and dynamic websites
Course Outcomes
After the completion of this course, students will be able to:
1. Know the fundamentals of web programming
2. Identify .NET technology and framework
3. Elaborate on the web based programming
4. Perform web based programming.
5. Design static and dynamic websites

Page 90 of 243
SYLLABUS
1. India is a large country. Different regions observe variations in climate. The spoken
language of one state is quite different from that of another. They wear different types
of garments. They celebrate different festivals and perform varied religious rites.
People belonging to diverse cultures belong to different religious faiths. In spite of
these diversities, Indians feel a sense of unity and oneness among them. Thus, we
conclude that India is a land of Unity in Diversity.
a) All the headings should be H2 and green colour.
b) Main heading should be H1 and centre aligned.
c) The background should be yellow colour.
d) There are 10 paragraphs so each of them should be made using P tag.
e) The Introduction and Conclusion paragraphs should have “Times New
Roman” font, the size should be 12 and colour should be blue.
f) All the remaining paragraphs text should be pink and magenta coloured in
an alternate way.
g) There should be one meaningful picture in the web page with specific
dimension.
2. Create a webpage having a list as shown below:
• Food
a. Fruit
 Apple
 Mango
 Pear
b. Vegetable
 Potato
 Tomato
 Carrot
• Dress
a. Ethnic wear
 Kurta
 Sherwani
b. Western wear
 suit
 jeans
• Sports
a. Indoor sports
 carom
 table tennis
b. Outdoor sports
 Cricket
 Hockey
3. Create a webpage with the following:
a) A superscript and subscript tag
b) Pre tag
c) Paragraph tag
d) Anchor tag
Page 91 of 243
e) Image tag
f) Definition list tag
g) Marquee tag
h) Horizontal line tag
i) Break tag
j) Heading tag
4. Create a webpage having 10 divisions each having separate background color and text
color using
<DIV> tag. At the top right corner there should be an image hyperlink opening in a new
webpage.
5. Create a webpage with a form loaded into it and take input of three
strings through three textboxes and then concatenate them without using any
built-in function.
6. Create a webpage with two tables. First one should have 1 row and 5 columns and
the second one with 3 rows and 4 columns. The contents of the first table should be
center aligned and contents of the second table should be right aligned. Each column
of the first table should have separate
colors and each row of the second table should have separate colors.
7. Write a JavaScript program to calculate and display the aggregate and
percentage of three subjects’ (Physics, Chemistry and Mathematics) marks
along with the name of a student. The name and individual marks input shall
be taken by textbox in the webpage.
8. Write a JavaScript program to search the element 4 in the array [2, 6, 4, 10, 4,
0, -2] using any method.
9. Create a framed webpage with different frames as below:
1 2 3
4 5
6 7 8
Contents of 1st, 3rd, 5th, 7th frame should be same again 2nd, 4th, 6th and 8th should be same.
4. Create a webpage to take input of a string and check whether it is a palindrome or not.
5. Write a program using JavaScript to display a structure as given below:
Page 92 of 243
*
* *
* * *
* * * *
* * * * *
6. Write a program using JavaScript to take input of an array of numbers like [-4, 5, 6, -1,
10] and then sort it in descending order.
7. Create a webpage to take input of a string and reverse that without using any user defined
function.
8. Write a JavaScript program to search 10 in the array [2, 6, -5, 10, 11, 0, -2] using a binary
search method.
9. Write a JavaScript program to take two arrays like [3, 7, 1, 6, 2, 3] and [5, 6, 0, -3] and
merge them into third array along with that remove the repetitive elements.
10. Write a JavaScript program to calculate the percentage of three subjects’ (English,
Mathematics, and Science) marks along with the name of a student. The name and
individual marks input shall be taken by form in the webpage.
11. Create a webpage to take input of a string and count the number of vowels in it.
12. Create a webpage to take input of two strings and concatenate them without using any builtin function.
13. Create a webpage to take input of a string and then slice it into three separate strings and
display that.
14. Write a JavaScript program to take two arrays like [1, 3, 8, 1, 6, 2, 3] and [2, 1, 5, 6, 0, -3]
and merge them into third array along with that remove the repetitive elements.
15. Write a JavaScript program to calculate and display the aggregate and percentage of three
subjects’ (Physics, Chemistry and Mathematics) marks along with the name of a student.
The name and individual marks input shall be taken by textbox in the webpage.
16. Create a webpage to take input of a string and check whether it is a palindrome or not.

Gaps in the Syllabus (to meet Industry/Profession requirements)
4. Application of principles of magnetic circuits to electrical machines like transformers,
generators and motors.
5. Field applications of three phase equipment and circuits in power system.
6. Applications of circuit theorems in electrical and electronics engineering.
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
18. Concepts of electric, magnetic and electromagnetic fields
19. 3 - Ф power generation and transmission
20. Power factor improvement for three phase systems
21. Utility of reactive power for creation of electric and magnetic fields
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Page 93 of 243
Page 94 of 243
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 95 of 243
Course Code: CA259
Course Title: SOFTWARE ENGINEERING LAB
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L:2 T:0 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: IV/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
6. To understand the concept of UML
7. To gain knowledge of various diagrams.
8. Learn about software requirement specification.
9. To gain knowledge about software design specification
10. To learn about the relationships among different UML diagrams.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Identify the software requirement capturing process.
CO2 Elaborate knowledge about dynamic view of system.
CO3 Analyse about static view of software system.
CO4 Analysis about the relationship among static and dynamic view of system.
CO5 Identify the process of deployment of software system
SYLLABUS
List of Programs as Assignments
1. Draw use case diagram for online banking system.
2. Draw use case diagram for online library system
3. Draw use case diagram for online railway reservation system
Page 96 of 243
4. Draw use case diagram for employee information system.
5. Draw use case diagram for inventory control system
6. Draw use case diagram for student information system.
7. Draw use case diagram for online hotel management system.
8. Draw use case diagram for online bus reservation system.
9. Draw use case diagram for online course registration system
10. Draw use case diagram for online teacher information system.
11. Draw sequence diagram for online banking system.
12. Draw sequence diagram for online library system.
13. Draw sequence diagram for online railway reservation system.
14. Draw sequence diagram for employee information system.
15. Draw sequence diagram for inventory control system.
16. Draw sequence diagram for student information system.
17. Draw sequence diagram for online hotel management system.
18. Draw sequence diagram for online bus reservation system.
19. Draw sequence diagram for online course registration system.
20. Draw sequence diagram for online teacher information system.
21. Draw activity diagram for online banking system.
22. Draw activity diagram for online library system.
23. Draw activity diagram for online railway reservation system.
24. Draw activity diagram for employee information system.
25. Draw activity diagram for inventory control system.
26. Draw activity diagram for student information system.
27. Draw activity diagram for online hotel management system.
28. Draw activity diagram for online bus reservation system.
Page 97 of 243
29. Draw activity diagram for online course registration system
30. Draw activity diagram for online teacher information system.
31. Draw class diagram for online banking system.
32. Draw class diagram for online library system
33. 33. Draw class diagram for online railway reservation system
34. Draw class diagram for employee information system.
35. Draw class diagram for inventory control system
36. 36.. Draw class diagram for student information system.
37. Draw class diagram for online hotel management system.
38. Draw class diagram for online bus reservation system.
39. Draw class diagram for online course registration system .
40. Draw class diagram for online teacher information system
Text Books:
1.MallRajib, “Fundamentals of Software Engineering”, PHI, 2005.
Reference Books:
1. Pressman, “Software engineering A Practitioner’s Approach”, MGH.
Gaps in the Syllabus (to meet Industry/Profession requirements)
7. Estimation of software scope feasibility and resources.
8. Develop architectural diagram, and implement by following coding principles.
9. Apply testing strategies and handle software product maintenance issues.
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
1. Gather and analyze system requirements
2. Develop process models and process system models
3. Translating design into coding.
4. Applying different testing stategies
Page 98 of 243
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2 2 3 3
CO2 3 3 3 1 3 1 1 1 2 3 2 3
CO3 3 3 3 3 3 1 2 2 1 1 2 3 3 2
CO4 3 3 3 1 3 1 1 1 1 2 2 3 2
CO5 3 3 3 3 3 1 1 1 1 1 1 2 3 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD7, CD 8
CD2 Tutorials/Assignments CO2 CD1 and CD9
CD3 Seminars CO3 CD1, CD2 and CD3
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
Page 99 of 243
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 100 of 243
Course Code: CA301
Course Title: COMPUTER GRAPHICS AND MULTIMEDIA
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: V/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. Acquire fundamental knowledge of role of multimedia and graphics in
computer science.
B. Learn various object modelling algorithms and computations related to it.
C. Learn to model and colour 2D and 3D objects
D. Learn to develop simple Graphical User Interface
E. Learn about graphics system and corresponding display methodologies.
Course Outcomes
After the completion of this course, students will be able to:
1. Can perform visual computations for geometrical drawings.
2. Can model 2D objects.
3. Apply geometrical transformation of the modelled objects.
4. Can develop simple Graphical User Interface.
5. Design multimedia applications

Page 101 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction to Graphics Systems: Video Display Devices, Raster Scan
Systems, Random Scan Systems, Graphics Monitors and Workstations, Input
Devices, Hard Copy Devices, Graphics Software. Three-Dimensional Viewing
Devices, Stereoscopic & Virtual Reality Systems
8
Module – II
Output Primitives: Points and Lines, Line Drawing Algorithms (DDA and
Bresenham’s Algorithms), Loading the Frame Buffer, Circle Generating
Algorithm, Filled Area Primitives – Scan-line Polygon Fill Algorithm,
Boundary-Fill Algorithm, Flood-Fill Algorithm, Color Tables.
8
Module – III
2D Transformation and Viewing: Basic Transformations, Matrix
Representations and Homogeneous Coordinates, Composite
Transformations (Translations, Rotations, Scalings), Other Transformations
(Reflection and Shear), The Viewing Pipeline, Viewing Coordinate
Reference Frame, Window-to- Viewport Coordinate Transformation,
Clipping- Point, Cohen-Sutherland Line Clipping and SutherlandHodgeman Polygon Clipping.
8
Module – IV
Three-Dimensional Geometric Transformations: Translation, Rotation, Scaling.
8
Module – V
Introduction to Multimedia Systems and Multimedia Components:
Multimedia Systems, Multimedia Presentation and Production, Characteristics
of Multimedia Presentation, Uses of Multimedia. CD Formats, DVD, DVD
Formats. Text and its File Formats, Image Types and File Formats, Fundamental
Characteristics of Sound, Audio File Formats, Video, Transmission of Video
Signals, Video File Formats.
8
TEXT BOOKS
1. HearnD. and BakerM. P., “Computer Graphics: C Version”, 2nd Edition, Pearson
Education, 2007.
2. BufordJ. F. K., “Multimedia Systems”, 1st Edition, Pearson Education, 2005.
Page 102 of 243
REFERENCE BOOKS
1. FoleyJ. D., DamA. Van, Feiner S. K. and HughesJ. F., “Computer Graphics:
Principles and Practice in C”, 2nd Edition, Pearson Education, 2000.
2. ParekhR., “Principles of Multimedia”, 2nd Edition, Tata McGraw Hill, 2012.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Page 103 of 243
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Course Code: CA303
Course Title: COMPUTER NETWORKS
Page 104 of 243
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: V/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To build an understanding of the fundamental concepts of the data
communication model and communications architecture.
B. To study characteristics of communication mediums and the characteristics
of signals propagated through different transmission media, including
concepts of transmission impairments.
C. To understand the basic principles of signal encoding techniques, errordetection, and error-correction techniques.
D. To understand techniques for flow control and multiplexing for maximum
utilization of bandwidths in the data communications process.
E. To understand the various switching techniques and routing techniques for
efficient transmission.
Course Outcomes
After the completion of this course, students will be able to:
1. Understand and be able to explain the principles of a layered protocol
architecture; be able to identify and describe the system functions in the
correct protocol layer and further describe how the layers interact.
2. Understand, explain and calculate digital transmission over different types of
communication media.
3. Understand, explain and solve mathematical problems for data-link and
network protocols.
4. Describe the principles of access control to shared media and perform
performance calculations.
5. Understand and explain the principles and protocols for route calculations
and be able to perform such calculations.
SYLLABUS
Page 105 of 243

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Network: Needs and Advantages, Network Hardware, Network software,
Classification of Networks: LAN, MAN, WAN, Network Topology: Bus, Star,
Ring, Star bus, Star ring, Mesh – Features, Advantages and disadvantages of
each type.
8
Module – II
Transmission Media: Wired & Wireless transmission, properties & speciality
of various media, ConnectivityDevices: Modem, Repeater, NIC, Network
adapters, Connectors, Transceiver, Hub, Bridge, Switches, Routers and
Gateways,
Network Architecture: Layering and Design, OSI Reference Model, TCP/IP Model,
SNA
8
Module – III
Physical Layer: Functions and Services, Interface: EIA 232 D Interface,
DTE/DCE Interface, Null Modem, Physical Layer Standard. Multiplexing: FDM
& TDM
8
Module – IV
Data Link Layer: Functions, Error control: Error Detection and Correction
Techniques), Flow Control: Stop and Wait & Sliding Window Flow controls.
Protocols: HDLC.
Network Layer: Need and Services, Internetworking Principles, Internet
Protocol(IPv4), Routing, Congestion Control.
8
Module – V
Local Area Network: Ethernet, Fast Ethernet, Token Rings, FDDI, ATM, IEEE
802 standards: 802.3, 802.4, 802.5
Network Security: Network security issues, approaches to network security,
hacking. Firewalls: types of firewall technology- network level and application
level, limitations of firewalls. Encryption and Decryption (Basic concepts)
8
TEXT BOOK
1. TanenbaumAndrew S, “Computer Networks”, Pearson Education, New Delhi.
REFERENCE BOOKS
1. ComerD E, “Computer Networks and Internet”, 2nd Edition, Pearson Education,
New Delhi.
Page 106 of 243
2. GuptaPrakash C, “Data Communication & Computer Networks”, PHI, New Delhi.
3. Forouzan B., “Data Communications and Networking”, 3rd edition, Tata
McGraw-Hill Publications.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
2.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
Page 107 of 243
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation


Page 108 of 243
Course Code: CA304
Course Title: MANAGEMENT INFORMATION SYSTEMS
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: V/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To know the role of Information Systems in Business Today.
B. To know what is an Information System.
C. To understand how Businesses Use Information Systems:
D. To know the basics of Information Systems, Organizations, and Strategy.
E. To know the basics of Information Technology and Computers uses in
Management Information Systems.
Course Outcomes
After the completion of this course, students will be able to:
1. Identify the role of Information Systems in Business Today.
2. Analyse what is an Information System.
3. Assess Information Systems, Organizations, and Strategy.
4. Elaborate on the uses Computers and IT in Management Information
Systems.
5. Apply the impacts of MIS in Business Decision Makings.
Page 109 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Information Systems in Global Business Today:
The role of Information System in Business Today, How Information Systems
Are Transforming Business, What’s New in Management Information
Systems?, Globalization Challenges and Opportunities: A Flatted World, The
Emerging Digital Firm, Strategic Business Objectives of Information Systems,
Perspectives on Information Systems, What is an Information System?,
Dimensions of Information Systems, It Isn’t Just Technology: A Business
Perspective on Information Systems.
8
Module – II
E-Business: How Businesses Use Information Systems:
Business Processes and Information Systems, Business Processes, How
Information Technology Enhances Business Processes, Types of Information
Systems, Transaction Processing Systems, Management Information Systems
and Decision-Support Systems, Systems That Span the Enterprise, Enterprise
Applications, Intranets and Extranets, Collaboration and Communication
Systems: “Interaction” Jobs in a Global Economy, E-Business, The Information
Systems Function in Business.
8
Module – III
Information Systems, Organizations, and Strategy:
Organizations and Information Systems, What Is an Organization?, Features of
Organizations, How Information Systems Impact Organizations and Business
Firms, Economic Impacts, Organizational and Behavioural Impacts, The Internet
and Organizations, Implications for the Design and Understanding of Information
Systems, Using Information Systems to Achieve Competitive Advantage, Porter’s
Competitive Forces Model.
8
Module – IV
IT Infrastructure and Emerging Technologies:
IT Infrastructure, Defining IT Infrastructure, Evolution of IT Infrastructure,
Technology Drivers of Infrastructure Evolution, Infrastructure Components,
Computer Hardware Platforms, Operating System Platforms, Enterprise Software
Applications, Data Management and Storage, Networking/ Telecommunication
Platforms, Internet Platforms, Consulting and System Integration Services,
8
Page 110 of 243
Contemporary Hardware Platform Trends, The Emerging Mobile Digital Platform,
Grid Computing, Cloud Computing and the Computing Utility, Autonomic
Computing.
Module – V
Enhancing Decision Making:
Decision Making and Information Systems, Business Value of Improved
Decision Making, Types of Decisions, The Decision Making process, Managers
and Decision Making in The Real World, Systems for Decision Support,
Management Information System(MIS), Decision-Support Systems(DSS), WebBased Customer Decision-Support Systems, Group Decision-Support
Systems(GDSS), Executive Support Systems(ESS).
Case Studies: Two Recent Case Studies to be Discussed Fully Covering the
Whole Syllabus.
8
TEXT BOOK
1. Laudon K. and Laudon J.,“Management Information Systems”, Prentice Hall
Publication.
REFERENCE BOOKS
1. Murdick, Ross and Claggett, “Information Systems for Modern Management”, PHI
Publication.
2. Jawadekar W. S., “Management Information Systems”, Tata McGraw Hill
Publication.
3. GoyalD. P., “Management Information Systems Managerial
Perspectives”, Macmillan India Ltd.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Status of MIS in Indian Industry.
2. Effectiveness of MIS: A Case Study.
POs met through Gaps in the Syllabus
2, 3,6
Topics beyond syllabus/Advanced topics/Design
3. MIS design issues.
4. MIS Development of an organization.
POs met through Topics beyond syllabus/Advanced topics/Design
1, 2, 3, 6, 7, 8
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Page 111 of 243
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 112 of 243
Course Code: CA302
Course Title: COMPUTER GRAPHICS LAB
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: V/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. To learn computer graphics by practical
2. To Learn coding for various graphics tools.
3. To learn the various theory by implementation using programming
4. To identify the limitations of C Language for graphics related problem.
5. To know the practical application of computer graphics.
Course Outcomes
After the completion of this course, students will be able to:
CO1 To code programs efficiently.
CO2 To translate the graphics algorithm to programs.
CO3 To test and execute the graphical syntax and logical errors.
CO4 To apply programming to solve simple graphical problems using functions.
CO5 To write the C program efficiently for transformation problems.
Page 113 of 243
SYLLABUS
list of programs as assignments:
write programs using c language
1. To get the background color.
2. To set the background color.
3. To plot a point of co-ordinate (100,100).
4. To draw a line using the line function.
5. To draw a line using the line function. take the end co-ordinates from the user.
6. To draw a triangle using the polygon function.
7. To draw a polygon of ‘n’ edges using polygon function.
8. To draw a polygon of ‘n’ edges taken from the user using the polygon function.
9. To draw a circle using the circle function.
10. To draw a circle of radius ‘r’ taken from the user using the circle function.
11. To draw a line using dda algorithm.
12. To draw a line using bresenham’s line algorithm.
13. To draw a circle using midpoint circle algorithm.
14. To draw a line using bresenham’s line algo, where end points are taken from the user.
15. To draw a line using dda algo, where end points are taken from the user.
16. To draw ‘n’ concentric circles taken from user using midpoint algorithm.
17. To create a line and translate it.
18. To create a line and increase its size with a value taken from user.
19. To create an equilateral triangle.
20. To draw a line and rotate it with angle of 45.
21. To create a circle and translate it.
22. To create a circle and translate it with a value taken from user.
23. To create an equilateral triangle and rotate it with angle of 45.
24. To create an equilateral triangle and create reflection.
25. To scale a rectangle.
26. To shear a rectangle. take the shear factor from the user.
27. To create an equilateral triangle and translate, rotate and scale it.
28. To draw a line with shear and translation.
29. Draw bar chart.
30. Draw pie chart.
TEXT BOOK
1. Roger T. Stevens, Advanced Graphics Programming in C and C++, BPB Publication
2. Donald Hearn, M. Pauline Baker, Computer Graphics, C Version, Prentice Hall
Publication
Page 114 of 243
3. https://www.programmingsimplified.com/c/graphics.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Page 115 of 243
Mapping Between COs and Course Delivery (CD) methods

CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 116 of 243
Course Code: CA355
Course Title: DATA MINING
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: VI/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. Understand the need of data mining activities.
2. ntify the methods of pre-processing data and performing activates related to
ETL.
3. Know the various applications of data mining.
4. To familiarize the concepts of Data mining
5. To decide what data mining activities are required to obtain the desired
objectives.
Course Outcomes
After the completion of this course, students will be able to:
1. Identify data mining related applications and activities
2. Assess the problem and decide what data mining activities are required to
obtain thedesired objectives.
3. Mathematically perform pre-processing operations on datasets to ensure the
validity of the data is improved.
4. Analyse and evaluate algorithms for performing common data mining
5. Apply Data mining methods for performance and optimization issues
Page 117 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction: What is data mining? Motivating challenges. The origins of data
mining. Data mining tasks. Data: Types of Data. Attributes and Measurement.
Types of Data Sets. Data Quality Measurement and Data Collection Issues.
8
Module – II
Measures of Similarity and Dissimilarity: Basics. Similarity and Dissimilarity
between Simple Attributes. Dissimilarities between Data Objects. Similarities
between Data Objects. Examples of Proximity Measures. Issues in Proximity
Calculation. Selecting the Right Proximity Measure.
8
Module – III
Association Analysis: Basic Concepts and Algorithms Preliminaries. Frequent
Itemset Generation. The Apriori Principle. Frequent Itemset Generation in the
Apriori Algorithm. Candidate Generation and Pruning Support Counting. Rule
Generation.
8
Module – IV
Cluster Analysis: Basic Concepts and Algorithms. What Is Cluster Analysis?
Different Types of Clustering. Different Types of Clusters. K-means. Basic Kmeans Algorithm. Basic Agglomerative Hierarchical Clustering Algorithm. Key
Issues in Hierarchical Clustering. The DBSCAN Algorithm.
8
Module – V
Classification: Basic Concepts and Techniques. General Framework for
Classification. Decision Tree Classifier. A Basic Algorithm to Build a Decision
Tree. Methods for Expressing Attribute Test Conditions. Measures for Selecting
an Attribute Test Condition. Algorithm for Decision Tree Induction.
Characteristics of Decision Tree Classifiers. Model Evaluation.
8
TEXT BOOK
1. Tan Pang-Ning, Steinbach Michael, andKumar Vipin , “Introduction to Data
Mining”, Pearson Education, New Delhi.
REFERENCE BOOKS
1. Han Jiawei & Kamber Micheline, “Data Mining Concepts & Techniques”,
Page 118 of 243
Publisher Harcourt India. Private Limited, Second Edition
2. Dunham H.M. & Sridhar S., “Data Mining”, Pearson Education, New Delhi, 2006.
Gaps in the Syllabus (to meet Industry/Profession requirements)
10. Use of massive data to implement all the data mining concepts.
11. Interaction with domain knowledge concepts with the actual algorithmic implementation.
12. Handling various data using same data mining algorithms.
POs met through Gaps in the Syllabus
1, 3, 4, 12
Topics beyond syllabus/Advanced topics/Design
5. Text Mining
6. Outlier Mining
7. Advanced clustering algorithms
POs met through Topics beyond syllabus/Advanced topics/Design
1, 2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Page 119 of 243
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation


Page 120 of 243
Course Code: CA356
Course Title: DISTRIBUTED COMPUTING
Pre-requisite(s): Computer Network, Operating System
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: VI/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course enables the students to:
A. Know about Different forms of Computing.
B. UnderstandInterprocess Communications.
C. Learn and understand Distributed Computing Paradigms.
D. Know about The Client Server Paradigm.
E. Implement Distributed Objects.
Course Outcomes
After the completion of this course, students will be able to:
1. Justify the presence of concurrency within the framework of distributed
system.
2. Explain the range of requirements that modern distributed systems have to
address.
3. Describe how the resources in a parallel and distributed system are managed by
software
4. Understand the memory hierarchy and cost-performance trade-offs.
5. Explain what virtualization is and how it is realized in hardware and software.
Page 121 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Distributed Computing Concept: Definitions, The history of distributed
computing, Different forms of computing, The strengths & weaknesses of
distributed computing, Basics of operating systems, Network basics, Software
engineering basics. Event synchronization, Timeouts and threading, Deadlocks,
Data representation, Data marshalling, Event diagram and sequence diagram,
IPv4 & IPv6, Connection – oriented versus connectionless IPC.
8
Module – II
Distributed Computing Paradigms: Paradigms and Abstraction, Message
Passing, The Client-Server Paradigm, the Message System Paradigm, Remote
Procedure Call Model, RMI, The Distributed Objects Paradigm, The Object
space, The Mobile Agent Paradigm.
8
Module – III
The Socket API: The Socket metaphor in IPC, The Datagram Socket API, The
Stream-Mode Socket API, Sockets with nonblocking I/O Operations, Secure
Socket API.
The client server paradigm issuers, connection- oriented and connectionless
servers, Iterative server and concurrent server, stateful server and stateless
server.
8
Module – IV
Distributed Objects: Remote Procedure Calls, Distributed Objected Systems,
Remote Method Invocation, The Java RMI Architecture, The API for the Java
RMI, RMI Security Manager, Comparison of RMI
Remote Procedure Calls, Distributed Objected Systems, Remote Method
Invocation, The Java RMI Architecture, The API for the Java RMI, RMI Security
Manager, Comparison of RMI and Socket APIs.
8
Module – V
Group Communication: Unicasting versus Multicasting, Multicast API,
Connectionless versus Connection-oriented Multicast, Reliable Multicasting
versus Unreliable Multicasting, The Java Basic Multicast API.
8
Page 122 of 243
TEXT BOOK
1. Liu M. L., “Distributed Computing: Principles and Application”, Pearson Education,
2008.
REFERENCE BOOK
1. AltiyaH., WelchJ., “Distributed Computing Fundamentals, Simulations and
Advanced Topics”, 2nd edition, Wiley – India Edition, 2006.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1.Load balancing has not been addressed.
2.RMI technology has not be discussed in detail.
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
Page 123 of 243
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation


Course Code: CA360
Course Title: PROJECT
Credits: 6
Page 124 of 243
LIST OF PROGRAM
ELECTIVES
Page 125 of 243
PROGRAM ELECTIVE I (PE I)
Course Code: CA220
Course Title: INTERNET TECHNOLOGIES
Pre-requisite(s): Computer Network and Web Techonology
Co- requisite(s): IT LAB
Credits: 3 L:3 T:1 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: III/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To learn about basics of Internet Technologies.
B. Learn XML
C. Learn Server Side Programming.
D. Learn Java Servlet.
E. Apply Internet based Programming and web applications.
Course Outcomes
After the completion of this course, students will be able to:
1. Evaluate and analyse requirements of Internet technologies
2. Compare among the existing web based programming concepts
3. Create web based application.
4. Interactive server side application.
5. Implement dynamic web applications.

Page 126 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Internet Basics: Introduction to Internet, Client Server model, Internet IP
Address, Domain Name, Domain Registration, Internet Services, A Brief
Overview of TCP/IP and its Services, Hyper Text Transfer Protocol:
Introduction, Web Servers and Clients, IP Address, Cyber Laws, URL and its
Anatomy, Message format, Testing HTTP Using Telnet, Persistent and Non
persistent Connections, Internet Security, Web Caching, Proxy.
10
Module – II
History of HTML and W3C, HTML and its Flavours, HTML Basics, Elements,
Attributes and Tags, Basic Tags, Advanced Tags, Frames, Images, Meta Tag,
Planning of Web Page, Model and Structure for a Website, Designing Web
Pages, Multimedia Content Frames, Cascading Style
Sheet:Introduction,Advantages, Adding CSS, Browser Compatibility, CSS and
Page Layout, Selectors
10
Module – III
XML Technologies: Common Usage, Role of XML,Prolog,Body, Elements,
Attributes, Validation, Displaying XML, Namespace. XML DTD: XML
Schema Languages, validation, Introduction to DTD, Purpose of DTD, Using a
DTD in an XML Document, Element Type Declaration, Attribute Declaration,
Entity Declaration.
Parsing XML: XML DOM, DOM Nodes, The Node Interface, Document Node,
Element Node, Text Node, Attr Node, Java and DOM
7
Module – IV
Server Side Programming: Servlet : Server –Side JAVA, Advantages Over
Applets , Servlet Alternatives , Servlets Strengths , Servlet Architecture, Servlet
life Cycle , Generic Servlet and Http Servlet, First Servlet , Passing Parameters
to Servlets , Retrieving Parameters , Server side Include , Cookies, Filters,
Problems with Servlet, Security Issues , Java Server Pages : Introduction and
Marketplace , JSP and HTTP, JSP Engines, How JSP Works , JSP and Servlet,
Anatomy of JSP page , JSP Syntax , JSP Components.
8
Module – V
Session Tracking: User Passing Control and Data between Pages, Sharing
Session and Application Data, Data Base Connectivity, JDBC Drivers, Basic
Steps, Loading a Driver, Making a connection, Execute an SQLStatement, SQl
5
Page 127 of 243
Statements, Retrieving Result, GettingDatabase Information, Scrollable and
Updatable Result Set, Result Set Metadata.
Text Books:
1. RoyUttam K., “Web Technology”, Oxford University Press.
Reference Books:
1. EtalXue Bai, “The Web Warrior Guide to Web Programming”, Thomson Learning, 2003.
2. XavierC., “Web Technology & Design”, New Age International Publishers, 1st Edn, New
Delhi, 2004.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty

Page 128 of 243
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 129 of 243
Course Code: CA221
Course Title: INTERNET TECHNOLOGIES LAB
Pre-requisite(s):
Co- requisite(s): Problem Solving And Programming In Html, Xml. Servlet , Jsp
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: III/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. To learn client side web programming
2. To Learn GUI design at client side
3. To learn the concept of web server
4. To know the server side web programming
5. To know the practical application of various server side programming techniques.
Course Outcomes
After the completion of this course, students will be able to:
CO1 To formulate client side HTML programming
CO2 To formulate XML web based applications
CO3 To configure web server
CO4 To apply programming concept to develop server side applications
CO5 To formulate server side applications to bind data bases.

Page 130 of 243
SYLLABUS
List of Programs as Assignments:
1. Create a simple html file to demonstrate the use of different heading tags.
2. Create a simple html file to demonstrate different types of list.
3. Create a simple html file to create a table containing marks of 5 subjects of 10 students.
4. Design a html form for reserving a room in a hotel.
5. Create a html page with different types of frames such as floating frame, navigation frame &
mixed frame.
6. Create a html form to find the railway fare from one place to another.
7. Create an XML structure with elements and attributes for Library information system.
8. Create an XML structure with elements and attributes for railway reservation system.
9. Create an XML document for student information system. Create a DTD and link the DTD to the
XML document.
10. Create an XML document for employee information system. Create a DTD and link the DTD to
the XML document
11. Create an XML schema for an XML file, which contains information about books that are
available in the library.
12. Write a Servlet Program that displays server information (server name, port etc.).
13. Create a servlet program to retrieve the values entered in the html file.
14. Create a servlet program that takes your name and address from a HTML Form and displays it.
15. Write a program to show inter servlet communication between two servlets.
16. Create a simple servlet program to display the date and time.
17. Write a JSP program to output, "Welcome to JSP world."
18.Write a JSP page to display current time.
18. Write a JSP page that display a randomly generated number in first visit to this page and repeat
displaying this same number in subsequent visits.
19. Write a JSP page to display current date.
20. Write a JSP page using <jsp:forward> to go to a servlet program which displays your name, date
of birth and address.
21. Create a HTML form to take customer information (Name, Address, Mobile No.). Write a JSP
program to validate this information of customers.
22. Write a jsp program to display student records stored in the database.
23. Create a form to record student details and store it into the database using jsp.
24. Write a program, using servlet and JDBC which takes students roll number and provides student
information, which includes the name of the student, address, email-id, program of study, and
25. year of admission. You have to use a database to store student’s information.
26. Write program of Q25. with login and password protection. Display a message if login and
password are not correctly given.
27. Create a database of students. Write a program using jsp to display the name, course, semester for
those students who have more than 3 backlogs.
Page 131 of 243
28. Create a database of students who are in the 5th Semester of the BCA. Write a program using JSP
and JDBC to display the name and address of those students who are born after 1995.
29. Write a program using servlet and JDBC for developing an online application for the shopping of
computer science books. You have to create a database for book title, author(s) of book, publisher,
year of publication, price. Make necessary assumptions for book shopping.
30. Develop an application that collects/maintains the product information of an electronics goods
production company in a database. Write a JSP page to retrieve information from the database on
demand. Make necessary assumptions to develop this application.
Books recommended:
TEXT BOOK
1. Deitel,. P.J. Deitel, H.M. "Internet & World Wide Web How to Program", Pearson
International Edition, 4th Edition.
REFERENCE BOOKS
1. Xavier C., “Web Technology & Design”, New Age International Publishers, 1st Edn, New
Delhi, 2004.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure

Page 132 of 243
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 133 of 243
Course Code: CA222
Course Title: MOBILE APPLICATION
Pre-requisite(s): COMPUTER NETWORK, OPERATING SYSTEMS
Co- requisite(s): NONE
Credits: 3 L: 3 T: 1 P: 0
Class schedule per week: 04
Class: BCA
Semester / Level: III/2
Branch: BCA
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
11. To know about the mobile architecture with its different tires
12. To know the mobile infrastructure and its components
13. To adopt existing application and mobilizing and upgrading them for further use.
14. To learn to compare mobile and native applications
15. To gain knowledge of different architecture.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Be competent with the characterization and architecture of mobile applications.
CO2 Be competent with understanding enterprise scale requirements of mobile
applications
CO3 Be competent with designing and developing mobile applications. 4
CO4 Be competent with comparatively evaluating the capabilities
CO5 Be exposed to technology and business trends impacting mobile applications
Page 134 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction, Developing Mobile Applications, Going Mobile, People Perspective,
Mobilizing the Enterprise.
8
Module – II
Mobile Application Architectures, Client-Server layers and Tires, Client thin and
fat & web page Hosting, Server one, two and three tire architecture, Connection
type with always, partially and never connect, Good Architectural Design Tenets
8
Module – III
Mobile Infrastructure, Mobile Device Types, Mobile Device Components,
Connection Methods
8
Module – IV
Mobile Client Applications, Thin Client, Fat Client, Web Page Hosting, Best
Practices
8
Module – V
Mobilizing existing application architectures. Evolution of Enterprise
Architectures, Anatomy of Enterprise Web Architecture, Considerations When
Mobilizing Existing Applications, Types of Mobile Applications, Mobile Web
Apps Versus Native Applications, Mobile Web Apps Versus Native Applications,
Mobile 2.0
8

Page 135 of 243
Text Books:
1. SchellRobbie, SchneiderHeather, LeeValentino, “Mobile Applications: Architecture, Design, and
Development”, Prentice Hall 2004.
2. FlingBrian, “Mobile Design and Development”, O'Reilly Media, 2009.
Reference Books:
1. McWherterJeff, GowellScott, “Professional Mobile Application Development”, John Wiley & Sons 2012.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1.On-demand development apps
2.Motion and Location sensing
3. Application performance management
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
1. to promote efficiency through artificial intelligence
2. Surge of On-demand Apps
3. Integration of Wearable Apps
4. Real –time interaction between the service provider and customers.
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Page 136 of 243
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2 3 2 3
CO2 3 3 3 1 3 1 1 1 2 2 3 3
CO3 3 3 3 3 3 1 2 2 1 1 2 3 2 3
CO4 3 3 3 1 3 1 1 1 1 2 2 3 3
CO5 3 3 3 3 3 1 1 1 1 1 1 2 3 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD7, CD 8
CD2 Tutorials/Assignments CO2 CD1 and CD9
CD3 Seminars CO3 CD1, CD2 and CD3
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
Page 137 of 243
CD9 Simulation
Page 138 of 243
PROGRAM ELECTIVE II (PEI II)
Course Code: CA223
Course Title: ECOMMERCE TECHNOLOGY
Pre-requisite(s): General Idea of Computer Network & Internet Technology.
Co- requisite(s):
Credits: 4 L:3 T:1 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: IV/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To know the basics of E - commerce .
B. To understand Electronic Data Interchange
C. To understand Security Issues of E- Commerce
D. To understand Electronic Payment systems.
E. To understand Internet Advertising
Course Outcomes
After the completion of this course, students will be able to:
1. Able to learn E- Commerce perspectives.
2. Able to learn Electronic Data Interchange.
3. Able to learn Security majors of E- Commerce.
4. Able to Manage & Learn Electronic Payment system.
5. Able to use & Manage Internet Advertisements.

Page 139 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction to E- Commerce: What is E- Commerce, Impact of ECommerce, Classification of E- Commerce, Application of E- Commerce
technologies, E- Commerce Business Models, Frame work of V ECommerce.
8
Module – II
Electronic Data Interchange (EDI): Conventional Trading process, what is
EDI, Building Blocks of EDI Systems, Layered Architecture, value added
networks, Benefits of EDI, Application of EDI.
8
Module – III
E- Commerce – Securing Business & Network Transactions: Why
Information on Internet Is Vulnerable?, Security Policy, Procedures & Practices,
Site Security, Transaction Security, cryptology, Cryptographic algorithms,
Public Key Algorithms, Authentication Protocols, Digital signature, Electronic
Mail security, Security Protocols for Web Commerce
8
Module – IV
Electronic Payment Systems: Introduction to Payment systems, Online Payment
System, Prepaid Payment systems, Post Paid Payment Systems, Requirements
metrics of a payment system.
8
Module – V
Internet Advertising: Emergence of the Internet as a Competitive Advertising
Media, Models of Internet Advertising, Banner Advertisements, Sponsoring
content, Screen Savers & Push Broadcasting, Corporate website, Interstitials,
SuperStitials, Opt-in’s, Weaknesses in Internet Advertising.
8
TEXT BOOK
1. BhaskarBharat, “Electronic Commerce – Frame work, Technologies and Applications”, Tata
Mcgrow Hill, New Delhi.
REFERENCE BOOK
1. WhiteleyDavid, “E- Commerce Strategy, Technologies applications”, TMH, New Delhi.
2. TurbanIrfan, Dennis veehland, David King, Joe lee, “E- Commerce – A Managerial
Perspective”, Pearson Education Asia.
Page 140 of 243
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. E-Commerce business models.
2. Building an E-Commerce Web Site.
3. Ethical, Social, and Political Issues in E-Commerce.
POs met through Gaps in the Syllabus
1,3,5,6
Topics beyond syllabus/Advanced topics/Design
1. Online Retailing and Services.
2. Online content and media.
POs met through Topics beyond syllabus/Advanced topics/Design
1,3,7
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1.Student Feedback on Faculty

Page 141 of 243
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)

Page 142 of 243
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 143 of 243
Course Code: CA271
Course Title: Soft Computing and Applications
Pre-requisite(s):
Co- requisite(s): None
Credits: 4 L: 3 T: 1 P: 0
Class schedule per week: 04
Class: BCA
Semester / Level: IV/2
Branch: BCA
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
16. To understand the concept of fuzzy logic and controllers.
17. To understand the various architectures of ANN and its learning methods.
18. To learn about basic concepts of genetic algorithm and its operators.
19. To understand the Artificial Neural Networks.
20. To understand the Genetic Algorithms.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Solve numerical on Fuzzy sets and Fuzzy Reasoning.
CO2 Develop Fuzzy Inference System (FIS).
CO3 Solve problems on Genetic Algorithms
CO4 Explain concepts of neural networks
CO5 Develop neural networks models for various applications.

Page 144 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Fuzzy Set Theory: Basic Definition and Terminology, Set Theoretic Operations,
Fuzzy types and levels, MF Formulation and Parameterization, MF of two
dimensions, Fuzzy Union, Intersection and Complement, Fuzzy Number, Fuzzy
measure.
8
Module – II
Fuzzy Logic: Fuzzy Rules and Fuzzy Reasoning: Extension Principles and Fuzzy
Relations, Fuzzy IF THEN Rules, Defuzzification, Fuzzy Reasoning. Fuzzy Inference
System: Introduction, Mamdani Fuzzy Models, Other Variants, Sugeno Fuzzy Models,
Tsukamoto Fuzzy Models.
8
Module – III
Fundamentals of Genetic Algorithms: Basic Concepts, Creation of Offsprings,
Encoding, Fitness Functions, Reproduction, Genetic Modelling: Inheritance Operators,
Cross over, Inversion and detection, Mutation operator, Bitwise operators.
8
Module – IV
Introduction to Artificial Neural Networks: What is a Neural Network? Human Brain,
Models of Neuron, Neural Network viewed as Directed Graphs, Feedback, Network
Architecture, Knowledge Representation, Learning processes:(Error correction, MemoryBased, Hebbian , Competitive, Boltzman ,Supervised,Unsupervised),Memory,Adaptation.
8
Module – V
Perceptrons, Adaline, Back Propagation Algorithm, Methods of Speeding, Convolution
Networks, Radical Basis Function Networks, Covers Theorem, Interpolation Learning,
The Hopfield Network.
8

Page 145 of 243
Text Books:
1. Jang J.S.R., Sun C.T. and Mizutani E., “Neuro-Fuzzy and Soft Computing” PHI/Pearson
 Education, New Delhi, 2004.
2. Rajasekaran S. & Vijayalakshmi, G.A. Pai, "Neural Networks, Fuzzy Logic, and Genetic
 Algorithms: Synthesis and Applications”, PHI, New Delhi, 2003.
3. Ross T. J., “Fuzzy Logic with Engineering Applications”, TMH, New York, 1997.
4. Haykins Simon, “Neural Networks:A Comprehensive Foundation”, Pearson Education,2002.
Reference Books:
1. Ray K.S., “Soft Computing and Its application”, Vol 1, Apple Academic Press.2015.
2. Lee K.H., “First Course on Fuzzy Theory and App.”, Adv in Soft Computing Spinger.2005.
3. Zimmermann H.Z., “Fuzzy Set Theory and its App”, 4thEdition, Spinger Science,2001.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Application of soft computing to develop and design the adaptive controllers.
2. Application of fuzzy inference system for prediction and modelling to complex problems.
POs met through Gaps in the Syllabus
3, 5
Topics beyond syllabus/Advanced topics/Design
1. Concepts and features of hard computing and soft computing.
2. NN- controller for an intelligent and autonomous robot.
3. Merits and Demerits of soft computing tools.
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 5
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50

Page 146 of 243
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 147 of 243
Course Code: CA272
Course Title: Soft Computing using MATLAB /SCI LAB
Pre-requisite(s):
Co- requisite(s): None
Credits: 2 L: 0 T: 0 P: 4
Class schedule per week: 04
Class: BCA
Semester / Level: IV/2
Branch: BCA
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
21. To understand the concept of fuzzy logic and controllers.
22. To understand the various architectures of ANN and its learning methods.
23. To learn about basic concepts of genetic algorithm and its operators.
24. To understand the Artificial Neural Networks.
25. To understand the Genetic Algorithms.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Solve numerical on Fuzzy sets and Fuzzy Reasoning.
CO2 Develop Fuzzy Inference System (FIS).
CO3 Solve problems on Genetic Algorithms
CO4 Explain concepts of neural networks
CO5 Develop neural networks models for various applications.

Page 148 of 243
SYLLABUS

 QUESTIONS
1. To perform Union, Intersection and Complement operations.
2. Implementation of Fuzzy Relations (Max-min Composition).
3. To implement De-Morgan’s Law.
4. To plot various membership functions.
5. To implement FIS Editor.
6. Implementation of Fuzzy Controller (Washing Machine).
7. Implementation of Perceptron Learning Algorithm.
8. Implementation of Unsupervised Learning Algorithm.
9. Implementation of Simple Genetic Application.

Page 149 of 243
Text Books:
1. Jang J.S.R., Sun C.T. and Mizutani E., “Neuro-Fuzzy and Soft Computing” PHI/Pearson
 Education, New Delhi, 2004.
2. Rajasekaran S. & Vijayalakshmi, G.A. Pai, "Neural Networks, Fuzzy Logic, and Genetic
 Algorithms: Synthesis and Applications”, PHI, New Delhi, 2003.
3. Ross T. J., “Fuzzy Logic with Engineering Applications”, TMH, New York, 1997.
4. Haykins Simon, “Neural Networks:A Comprehensive Foundation”, Pearson Education,2002.
Reference Books:
1. Ray K.S., “Soft Computing and Its application”, Vol 1, Apple Academic Press.2015.
2. Lee K.H., “First Course on Fuzzy Theory and App.”, Adv in Soft Computing Spinger.2005.
3. Zimmermann H.Z., “Fuzzy Set Theory and its App”, 4thEdition, Spinger Science,2001.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Application of soft computing to develop and design the adaptive controllers.
2. Application of fuzzy inference system for prediction and modelling to complex problems.
POs met through Gaps in the Syllabus
3, 5
Topics beyond syllabus/Advanced topics/Design
1. Concepts and features of hard computing and soft computing.
2. NN- controller for an intelligent and autonomous robot.
3. Merits and Demerits of soft computing tools.
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 5
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Page 150 of 243
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA273
Course Title: Data Analytics
Pre-requisite(s): Basic Programming
Co- requisite(s):
Credits: 4 L: 3 T: 1 P: 0
Class schedule per week: 04
Class: BCA
Page 151 of 243
Semester / Level: PE II
Branch: BCA
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
26. Understand business intelligence and data analytics.
27. To understand the methods of pre-processing data and performing activates related to
data analytics.
28. Know the various applications of data analysis.
29. Know the business data analysis through the powerful tools of data
analytics.
5. To decide what data analysis techniques are required to obtain the desired
objectives.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Illustrate about business intelligence and data analytics.
CO2 Explore different aspects of data analysis technologies.
CO3 Elaborate the methods of data mining and creation of decision tree.
CO4 Implement data analysis through the powerful tools of data application.
CO5 Apply R to implement various data analytics.

Page 152 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Analysis using Descriptive and Pictorial Statistics: mean, median, mode, harmonic
mean, geometric mean, variance and standard deviation, quantiles, skewness,
moments and kurtosis. Data Visualization: Summery table, Contingency table, Bar
plot, Pie chart, Frequency distribution, Relative frequency distribution,
Cumulative frequency distribution, Histogram, Frequency polygon, Cumulative
frequency graphs, Box plot, Time series plot, Scatter diagram.
10
Module – II
Data Relationships, Transformation, and Data Cleaning: Relationships between
different types of data: Relationship between two categorical data, Relationship
between categorical and quantitative data, Relationship between two quantitative
data Transformation: The logarithm transformation, Root and
square root transformation Standardization (Z-transformation), Min-max
normalization. Data cleaning: missing values, noisy data.
10
Module – III
Analysis using Inferential Statistics: Sampling, Sampling Distribution, and
Estimation of Parameters, Sampling distribution of: means, proportions, difference
of means, difference of proportions. Hypothesis testing about: population mean,
the difference between two means, about a population proportion, difference
between two proportions.
10
Module – IV
Social Network and Text Data Analysis: What is a social network? Characteristics
of social network. Link mining: Tasks and challenges. Mining on social networks.
Text data analysis and informational retrieval. Dimensional reduction for text.
5
Module – V
Outlier Analysis: Outlier detection based on: statistical distribution, distance
based, deviation based.
5
Text Books:
1. Gupta and Gupta, “Business Statistics”, Sultan Chand and Sons, 2014.
2. Bishnu and Bhattacherjee, Data Analysis: Using Statistics and Probability with R Language, PHI
Learning, 2019.
3. Han J and Kamber M, “Data Mining: Concepts and techniques”, Morgan Kaufmann Publishers.
Reference Books:
1. Maheshwari Anil, “Data Analytics”, Mc Graw hill publication, 2017.
2. TanPang-Ning, SteinbachMichael, and KumarVipin, “Introduction to Data Mining, Pearson
Page 153 of 243
3. Education”, New Delhi.Dunham H.M. & Sridhar S., “Data Mining”, Pearson Education, New Delhi,
2006.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Use of various data to implement all the data analysis concepts.
2. Interaction with domain knowledge concepts with the actual algorithmic implementation.
3. Handling real data using data analytics algorithms.
POs met through Gaps in the Syllabus
1, 3, 4, 12
Topics beyond syllabus/Advanced topics/Design
1. Data analysis using clustering
2. Panel data analysis, conjoint data analysis, logistic regression
3. Data analysis on domain specific data.
POs met through Topics beyond syllabus/Advanced topics/Design
1, 2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 1 3 3 1 3 1 1 1 2 2 2 3
CO2 3 2 3 1 3 3 1 1 2 3 2 2
CO3 1 3 3 3 3 1 2 2 1 1 2 2 2 2
CO4 3 2 2 1 3 1 1 1 1 2 2 3 2
Page 154 of 243
CO5 1 3 3 3 3 1 1 1 1 1 1 2 2 3 2
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CD
Code Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD2, CD 4
CD2 Tutorials/Assignments CO2 CD1 and CD4
CD3 Seminars CO3 CD1, and CD8
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 155 of 243
Course Code: CA274
Course Title: Data analytics using R Language Lab
Pre-requisite(s): Basic Programming
Co- requisite(s):
Credits: 3 L: 0 T: 0 P: 4
Class schedule per week: 04
Class: BCA
Semester / Level: PE III
Branch: BCA
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
30. To know details about the R Language.
31. Understand Applications, advantages and limitations of various data types.
32. Real life use of data analytics using R Language.
33. Doing projects on data analytics using R Language.
5. Use R as a tool to develop latest know-how related to the subject.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Basic concepts of R programming.
CO2 Classify features of R programming and skills for various data analytic tool.
CO3 Apply the knowledge gained for their project work as well as to develop some
statistical applications.
CO4 Implement R for various data analytics applications.
CO5 Devised R based projects on data analytics.

Page 156 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
1. Mean, median, mode. 2. Harmonic mean, geometric mean. 3. Variance
and standard deviation. 4. Quantiles, Percentile. 5. Skewness. 6. Moments.
7. kurtosis.
8
Module – II
8. Summery table, contingency table. 9. Frequency distribution, relative
frequency distribution, cumulative frequency distribution. 10 Histogram,
frequency polygon, cumulative frequency graphs, 11 Satter diagram. 12.
Pie chart (2 D and 3 D) and bar plot (stacked and side by side). 13. Time
series plot.
8
Module – III
14. Relationships between different types of data: Relationship between
two categorical data. 15. Relationship between categorical and quantitative
data. 16. Relationship between two quantitative data Transformation. 17.
Logarithm transformation, Root and square root transformation. 18. Ztransformation 19. Min-max normalization.
8
Module – IV
20. Sampling distribution of: means. 21. Sampling distribution of:
proportions. 22. Sampling distribution of: difference of means. 23.
Sampling distribution of: difference of proportions.
8
Module – V
24. Hypothesis testing about: population mean. 25. Hypothesis testing
about: the difference between two means. 26. Hypothesis testing about: a
population proportion. 27. Hypothesis testing about: difference between
two proportions. 28. Identification of outlier data using scatter plot and
regression line. 29. Identification of outlier data using quartiles. 30.
Identification of outlier data using box plot.
8
Text Books:
1. Jared P. Lander, R for Everyone: Advanced Analytics and Graphics, Addison-Wesley Professional,
2017.
2. Bishnu, Partha Sarathi, Bhattacherjee, Vandana, Data Analysis : Using Statistics and Probability with R
Language, PHI Learning, 2019.
Page 157 of 243
Reference Books:
1. Mark Gardener, Beginning R: The Statistical Programming Language, O’Reilly.
2. Hadley Wickham and , R for Data Science: Import, Tidy, Transform, Visualize, and Model Data,
O'Reilly.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Use of massive data to implement all the data analytics concepts using R.
2. Interaction with domain knowledge with the actual algorithmic implementation using R language
3. Handling various data using same data analytics algorithms.
POs met through Gaps in the Syllabus
1, 3, 4, 12
Topics beyond syllabus/Advanced topics/Design
1. Implementation of Big data using R
2. Implementation of data mining using R
3. Implementation advanced graphical tools.
POs met through Topics beyond syllabus/Advanced topics/Design
1, 2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
Day to day performance & Lab files 30
First Quiz 10
Viva 20
Examination Experiment Performance 30
Second Quiz 10
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2 2 2 3
Page 158 of 243
CO2 3 1 3 1 3 3 1 1 2 2 3 3
CO3 3 3 3 3 3 1 2 2 1 1 2 3 3 2
CO4 3 2 2 1 3 1 1 1 1 2 2 2 2
CO5 1 3 3 3 3 1 1 1 1 1 1 2 3 3 2
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CD
Code Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD2, CD 4
CD2 Tutorials/Assignments CO2 CD1 and CD4
CD3 Seminars CO3 CD1, and CD8
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 159 of 243
PROGRAM ELECTIVE III (PEI III)
Course Code: CA224
Course Title: CLOUD COMPUTING
Pre-requisite(s): Computer Network, Operating System
Co- requisite(s):
Credits: 4 L:3 T:1 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: IV/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. To understand software, and other shared resources to be provisioned over
the network as services in an on-demand manner.
B. To understand the cloud computing models.
C. To understand the different types of cloud computing services namely,
Infrastructure-as-a-Service (IaaS), Platform-as-a-Service (PaaS), Softwareas-a-Service (SaaS).
D. To understand virtualization, security and privacy issues.
E. To understand Cloud OS, federated clouds.
Course Outcomes
After the completion of this course, students will be able to:
1. Identify the current practices in cloud computing.
2. Analyse the challenges in implementing clouds, data centers, hypervisor
CPU and memory management
3. Elaborate cloud hosted applications, and other advanced and research topics
in cloud computing
4. Evaluate the performance and systems issues, capacity planning, disaster
recovery.
5. Summarize the cloud computing facilities and current technologies.

Page 160 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Cloud Computing at a glance, Distributed Systems, Virtualization, Web
2.0,
8
Module – II
Eras of Computing, Elements of Distributed Computing, Concepts of
Virtualization and its characteristics, Virtualization and cloud computing, cloud
reference model, types of clouds, economics of the cloud.
8
Module – III
Cloud Interoperability and standards:
Amazon Web Services: Compute Services, Storage Services, Communication
Services. Google AppEngine: Architectural and Core Concepts, Application LifeCycle, Cost Model.
Microsoft Azure: Azure Core Concepts, SQL Azure.
8
Module – IV
Energy-Efficiency in clouds, Energy-Efficient and Green Cloud Computing
Architecture, Market- Oriented Cloud Computing, Federated clouds:
characterization and definition, cloud federation stack.
Cloud Security and Trust Management: Cloud Security Defense Strategies.
8
Module – V
Application of clouds in: Health care, Biology, CRM, ERP, Social Networking,
Productivity and Geoscience. Cloudlets for Mobile Cloud Computing.
8
TEXT BOOK
1. BuyyaRajkumar, Charles, VecchiolaChristian amd SelviS. Thamarai “Mastering Cloud
Computing”, McGraw Hill Education(India) Private Limited, 2013.
REFERENCE BOOK
1. HwangKai, FoxGeoffrey C., DongarraJack J., “Distributed and Cloud Computing from Parallel
Processing to the Internet of Things”, Morgan Kaufmann - India Edition, 2012.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Page 161 of 243
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)

Page 162 of 243
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 163 of 243
Course Code: CA275
Course Title: ANDROID PROGRAMMING
Pre-requisite(s):
Co- requisite(s): Computer Network, Operating System
Credits: 4 L:3 T:1 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: V/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. Develop app for digital devices.
2. Learn real time app.
3. Apply skill on real time applications.
4. Understand the logic and challenges of Android programming.
5. Integrate Java and android to develop game and applications for different
industries.
Course Outcomes
After the completion of this course, students will be able to:
1. Define app requirements for digital devices.
2. Classify the constraints in developing real time app.
3. Apply skill on real time applications.
4. Evaluate the logic and challenges of Android programming.
5. Develop and Integrate Java and android to develop game and applications for
different industries.
Page 164 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
What is Android? Android EcoSystem, Features of Android, Architecture of
Android, Android Verson,Android SDK, Android Development tools, Anatomy of
an Android Application.
8
Module – II
Android User Interface: Linear Layout, Absolute Layout, Frame Layout,
Relative Layout, Table Layout.
8
Module – III
Designing User Interface with View: Text View, Push Button, Image Button,
Edit Text, Checkbox, ToggleButton, Radio Button, ProgressBar, Spinner, List
View, Gridview, Time and Date Picker.
8
Module – IV
Displaying Pictures and Menus with Views: Gallery Views,ImageSwitcher,
GridView, Options Menu, Context Menu, DigitalClock View, Webview.
SMS Messaging: Sending SMS Messages Programmatically.
8
Module – V
SQLITE Database in Android: SQLite Database, Creation and connection of the
database, extracting values from a curser.
8
TEXT BOOK
1. DixitPrashant Kumar, “Android”, Vikas Publishing House Pvt. Ltd, 1stEdition, 2014.
REFERENCE BOOK
1. LeeWei-Meng, “Beginning Android for Application Development”, Wiley, Indian Edition.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Not interfacing with remote cloud storage
2. Not interfacing with computing Fog layer
POs met through Gaps in the Syllabus
Page 165 of 243
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
Page 166 of 243
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 167 of 243
Course code: CA 276
Course title: Android Programming Lab
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L: 0 T: 0 P: 2
Class schedule per week: 04
Class: BCA Semester / Level: IV/2
 Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course enables the students to:
1 Develop app for Android Based Mobile.
2 Understand the pros and cons of Android programming.
3 Understanding different App development platforms.
4 Learn the concept of real time app development.
5 Integrate different types of files and android to develop applications for
different industries.
Course Outcomes
After the completion of this course, students will be able to:
1 Develop app for different android based devices.
2 Understand constraints to develop apps on android platform.
3 Develop real time applications.
4. Integrate different types of files with Android.
5. Develop database application on Android platform.
SYLLABUS
List of Programs as Assignments:
1. Write a program using Android Developer Studio/Eclipse to generate Frame Layout.
2. Write a program using Android Developer Studio/Eclipse to generate button with content “My Button”.
3. Write a program using Android Developer Studio/Eclipse to generate three buttons with content “First”,
“Second”, “Third” and then orient them along row wise.
Page 168 of 243
4. Write a program using Android Developer Studio/Eclipse to generate three buttons with content “First”,
“Second”, “Third” and then orient them along column wise.
5. Write a program using Android Developer Studio/Eclipse to create Text-View to accept user name.
6. Write a program using Android Developer Studio/Eclipse to generate the following Table Layout
 Roll Number
 Name
7. Write a program using Android Developer Studio/Eclipse to generate the following Table Layout
 Login Id
 Password
8. Write a program using Android Developer Studio/Eclipse to implement Check_box.
9. Write a program using Android Developer Studio/Eclipse to implement Radio_Button.
10. Write a program using Android Developer Studio/Eclipse to import image to Frame Layout.
11. Write a program using Android Developer Studio/Eclipse to display an option Menu.
12. Write a program using Android Developer Studio/Eclipse to generate Analog Clock.
13. Write a program using Android Developer Studio/Eclipse to generate Digital Clock
14. Write a program using Android Developer Studio/Eclipse to load URL “google.com”.
15. Write a program using Android Developer Studio/Eclipse to load URL “bitmesra.ac.in”
16. Write a program using Android Developer Studio/Eclipse to accept a mobile number and then send sms
“Welcome”.
17. Write a program using Android Developer Studio/Eclipse to implement Context Menu.
18. Write a program using Android Developer Studio/Eclipse to display current date.
19. Create a SQLITE database Employee and Make a form in Android Studio/Eclipse to allow data entry to
Employee Form with the following command buttons:
 Employee Id
Submit
Save
Page 169 of 243
 Employee Name
 Address
 Date of Joining
20. Create a SQLITE database Student and Make a form in Android Studio/Eclipse to allow data entry to
Student Form with the following command buttons:
Roll No
Name
Text Books:
1. DixitPrashant Kumar, “Android”, Vikas Publishing House Pvt. Ltd, 1 st Edition,2014.
Reference Books:
Programming Android, 2nd Edition, Zigurd Mednieks, Blake Meike, Laird Dornin, Masumi Nakamura,
O'Reilly Media, October 2012
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 5
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Cancel
Submit
Cancel
Page 170 of 243
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 171 of 243
Course code: CA277
Course title: Python Programming
Pre-requisite(s): Nil
Co- requisite(s): CA 278 Python Programming Lab
Credits: 4 L: 3 T: 1 P: 0
Class schedule per week: 04
Class: BCA
Semester / Level: V/3
Branch: BCA
Course Objectives
This course enables the students to:
A. Understand computer programming concept using python language
B. Explore basic data types, control structures and standard library functions.
C. Explore the basic data structures: List, Tuple, Sets, Dictionaries available in python
D Learning Object oriented concept of programming and its implementation in python.
E. Handle disk data file for input output operations.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Solve the basic mathematical problem using python programming
CO2 Use basic data types control structures and utility functions from standard library for
faster programming.
CO3 Use the basic and user defined data structures as per the need of problem.
CO4 Design and implement the problem using OOP concept of python.
CO5 Store, retrieve and manipulate data with disk file.
Page 172 of 243
SYLLABUS
MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction to Computers, Programs, and Python:Introduction,Programming
Languages, Operating Systems, The History of Python, Features of python
language, Getting Started with Python, Programming Style and Documentation,
Programming Errors.
Elementary Programming:Introduction, Writing a Simple Program, Reading
Input from the Console, Identifiers,Variables, Assignment Statements, and
Expressions, Simultaneous Assignments, Named Constants, Numeric Data Types
and Operators, Evaluating Expressions and Operator Precedence, Augmented
Assignment Operators, Type Conversions and Rounding.
8
Module – II
Mathematical Functions, Strings,and Objects: Introduction, Common Python
Functions, Strings and Characters, Introduction to Objects and Methods,
Formatting Numbers and Strings.
Control Structures: Selections:Introduction, Boolean Types, Values, and
Expressions,if Statements, Two-Way if-else Statements, Nested if and Multi-Way
if-elif-else Statements, Logical Operators, Conditional Expressions, Loops:
Introduction, The while Loop, The for Loop, Nested Loops,Keywords break and
continue
8
Module – III
Functions: Introduction, Defining a Function, Calling a Function, Functions
with/without Return Values, Positional and Keyword Arguments, Passing
Arguments by Reference Values, Modularizing code, The Scope of Variables,
Default Arguments, Returning Multiple Values.
Lists:Introduction, List Basics, Copying Lists, Passing Lists to Functions,
Returning a List from a Function, Searching Lists, Sorting, Processing TwoDimensional Lists, Passing Two-Dimensional Lists to Functions,
Multidimensional Lists.
8
Page 173 of 243
Module – IV
Tuples, Sets, and Dictionaries: Introduction, Tuples: Creating Tuples, Basic
Tuple Operations, Indexing and Slicing in Tuples, Tuple methods, Sets: Creating
Sets, Manipulating and Accessing Sets, Subset and Superset, Set Operations,
Comparing the Performance of Sets and Lists, Dictionaries: Creating a Dictionary,
Adding, Modifying, and Retrieving Values, Deleting Items, Looping Items, The
Dictionary Methods.
.
8
Module – V
Objects and Classes: Introduction, Defining Classes for Objects, Immutable
Objects vs. Mutable Objects, Hiding Data Fields, Class Abstraction and
Encapsulation, Object-Oriented Thinking.Inheritance and Polymorphism:
Introduction, Superclasses and Subclasses, Overriding Methods, The object Class,
Polymorphism and Dynamic Binding, The isinstanceFunction. Class
Relationships: Association, Aggregation, composition.
Files and Exception Handling:Introduction, text input and ouput: opening a file,
Writing Data, Testing a File’s Existence, Reading All Data from a File, Writing
and Reading Numeric Data, Binary IO Using Pickling, Exception Handling,
Raising Exceptions.
8
TEXT BOOK
1. Y. Daniel Liang, “Introduction to programming using python”, Pearson Education; First edition (2017).
REFERENCE BOOK
1. Martin C. Brown, “Python: The Complete Reference”, McGraw Hill Education; Forth edition (2018)
2. Mark Lutz, “Learning Python” O′Reilly Fifth edition (2013)
3. Mark Summerfield, “Programming in Python 3: A Complete Introduction to the Python Language”
Pearson Education; Second edition (2018)
Page 174 of 243
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
Page 175 of 243
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 176 of 243
Course code: CA 278
Course title: Python Programming Lab.
Pre-requisite(s): No
Co- requisite(s): CA277 Python Programming.
Credits: 2 L: 0 T: 0 P: 4
Class schedule per week: 04
Class: BCA
Semester / Level: V/3
Branch: BCA
Name of Teacher:
Course Objectives
This course enables the students to:
1. Understand computer programming concept using python language
2. Explore basic data types, control structures and standrard library functions.
3. Explore the basic data structures: List, Tuple, Sets, Dictionaries available in python
4. Learning Object oriented concept of programming and its implementation in python.
5. Handle disk data file for input output operations.
Course Outcomes
After the completion of this course, students will be able:
CO1 Solve the basic mathematical problem using python programming
CO2 Use basic data types control structures and utility functions from standard library for
faster programming.
CO3 Use the basic and user defined data structures as per the need of problem.
CO4 Design and implement the problem using OOP concept of python.
CO5 Store, retrieve and manipulate data with disk file.
SYLLABUS
List of Programs as Assignments:
1. Write a program that displays “Hello to Python programming”.
2. Write a program to read two integers and perform arithmetic operations on them
Page 177 of 243
(addition, subtraction, multiplication and division).
3. Write a program to read the marks of three subjects and find the average of them.
4. Surface area of a prism can be calculated if the lengths of the three sides are known. Write a program
that takes the sides as input (read it as integer) and prints the surface area of the prism (Surface Area =
2ab + 2bc + 2ca)
5. A plane travels 395,000 meters in 9000 seconds. Write a program to find the speed of the plane (Speed
= Distance / Time).
6. You need to empty out the rectangular swimming pool which is 12 meters long, 7 meters wide and 2
meter depth. You have a pump which can move 17 cubic meters of water in an hour. Write a program to
find how long it will take to empty your pool? (Volume = l * w * h, and flow = volume/time).
7. Write a program to convert temperature from centigrade (read it as float value) to Fahrenheit.
8. A car starts from a stoplight and is traveling with a velocity of 10 m/sec east in 20 seconds. Write a
program to find the acceleration of the car. [acc = (Vfinal−Vinitial)/
Time].
9. Write a Program to Prompt for a Score between 0.0 and 1.0. If the Score Is Out of Range, Print an Error.
If the Score Is between 0.0 and 1.0, Print a Grade Using the Following Table

10. Write a Program to find the maximum of three numbers.
11. Suppose you want to develop a program to play a lottery. The program randomly generates a two-digit
number, prompts the user to enter a two-digit number, and determines whether the user wins according
to the following rules:
a) If the user’s input matches the lottery in the exact order, the award is $10,000.
b) If all the digits in the user’s input match all the digits in the lottery number, the award is $3,000.
c) If one digit in the user’s input matches a digit in the lottery number, the award is $1,000.
12. Write a Program to Check If a Given Year Is a Leap Year.
13. Program to Find the GCD of Two Positive Numbers.
14. Write a program that prompts the user to enter a four-digit integer and displays the number in reverse
order.
Page 178 of 243
15. Write Python Program to Find the Sum of Digits in a Number
16. Write a program to print the sum of the following series.
a) 1 + 1/2 + 1/3 +. …. + 1/n
b) 1/1 + 22
/2 + 33
/3 + ……. + nn
/n
17. Write a Program to Display the Fibonacci Sequences up to nth Term Where n is Provided by the User.
18. Write a Program to Find the Sum of All Odd and Even Numbers up to a Number Specified by the User.
19. Write a Program to Check Whether a Number Is Prime or Not.
20. Write a Program to Find the Factorial of a Number.
21. Write a Program to Demonstrate the Return of Multiple Values from a Function Definition.
22. Program to Demonstrate the Use of Default Parameters
23. Write Program to Demonstrate the Scope of Variables.
24. Program to Print the Characters Which Are Common in Two Strings.
25. Write a program to check whether a given String is palindrome or not.
26. Write Python Program to Count the Number of Times an Item appears in the List.
27. Write a program to create a list of integer numbers. Sort the elements using any sorting method.
28. Write a program to create a lists of integer numbers and perform the linear and binary search.
29. Write a program to create a lists of cities names and perform the sort the cities name in alphabetical
order.
30. Find Mean, Variance and Standard Deviation of List Numbers
31. Write a Program to Find the Transpose of a Matrix.
32. Write a program to perform the matrices multiplication.
33. Write a program to create a dictionary for countries name as key and currency as value. Traversve the
dictionary with key:value Pairs in using for Loop.
34. Write a program to create tuples, and perform the following operations: Merging of tuples, Spliting of a
tuple, comparison of two tuples.
35. Write a program to create an intersection, union, set difference, and symmetric difference of sets.
Page 179 of 243
36. Write a program with “MyRectangle” class aving the dimensions as data members and area() as a
method member. Calculate the area of each rectangle object created by user.
37. Design a class with name “MyComplex” to represent the complex number including the constructor
overloading, methods to perform the arithmetic operation over the two complex numbers. Write the
complete python program for the above design.
38. Design a class with name “Distance” to represent the distance in feet and inch. Include the method to
calculate the addition of two distances. Write the complete python program for the above design.
39. Write a complete program to implement the Employee and its subclasses (Salarayed Employee,
DailyWaged Employee, Commission based employee) given in Hierarchical and multilevel manner.
The program should exhibit the use of super key word to invoke the super class constructor.
40. Write a program to open a file and perform the reading and writing operation with the file.
41. Write a program to count the number of line in a file.
42. Write a program to count the frequencies of each word from a file.
43. Write a program to copy the text of a file to another file.
44. Write a program to append a file with the content of another file.
45. Write a program to compare two file.
46. Write a program to delete and insert a sentence at specified position in a file.
47. Write a program to delete a sentence from a file if the file contains a specific word.
48. Write program to delete comment lines from a file.
49. Write a program to capitalize each word of the file.
50. Write a program to handle an exception using exception handling mechanism of the python.
51. Write a program to raise an exception explicitly using raise keyword.
Text Books:
1. Y. Daniel Liang, “Introduction to programming using python”, Pearson Education; First edition (2017).
Reference Books :
1. Martin C. Brown, “Python: The Complete Reference”, McGraw Hill Education; Forth edition (2018)
2. Mark Lutz, “Learning Python” O′Reilly Fifth edition (2013)
3. Mark Summerfield, “Programming in Python 3: A Complete Introduction to the Python Language”
Pearson Education; Second edition (2018)
Page 180 of 243
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
Page 181 of 243
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 182 of 243
PROGRAM ELECTIVE IV (PEI IV)
Course Code: CA320
Course Title: Software Testing
Pre-requisite(s):
Co- requisite(s): Computer Network, Operating System
Credits: 3 L:3 T:0 P:0
Class schedule per week: 03
Class: BCA
Semester / Level: V/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
Course Objectives
This course envisions to impart to students to:
34. Have a broad understanding of software requirements in context to end user
expectations
35. Familiarize with testing environments and test processes.
36. Describe to the students the impact and methods to overcome programming errors
37. Devise strategies to detect and rectify common programming errors.
38. Conceptualize the role of testing in estimating software quality.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Understand the types and effects of errors and bugs on a software and the testing
process
CO2 Apply testing strategies to detect software bugs.
CO3 Analyse approaches of verification and validation including static analysis, and
reviews as well as software testing approaches such as unit testing and integration
testing.
CO4 Evaluate the software quality and apply test suites like JUnit and selenium for
testing software.
CO5 Summarize best practices for coding to ensure good quality software, quality
products by applying quality metrics.

Page 183 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction:Software Testing – Psychology of Testing, Verification and
Validation, Testing Team and Development Team, Characteristics of Test
Engineers, Levels of Testing Principles of Software Testing, Error, Fault, Failure,
Incident, Error and Fault Taxonomies, Test Cases, Limitations of Testing
Codeinspections, desk checking, group walkthroughs and peer reviews. Overview
of Graph Theory for tester.
8
Module – II
Functional Testing: Boundary Value Analysis, Equivalence Class Testing,
Decision TableBased Testing, Cause Effect Graphing Technique. Structural
Testing: Path testing, DD-Paths, Cyclomatic Complexity, Graph Metrics,
DataFlow Testing, Slice based testing
8
Module – III
Testing Activities: Unit Testing, Levels of Testing, Integration Testing, System
Testing, Debugging, Regression Testing, Extreme Testing.
8
Module – IV
Object Oriented Testing: Issues in Object Oriented Testing, Class Testing, GUI
Testing, Object Oriented Integration and System Testing. Testing Internet
applications: Overview, challenges and strategies of testing internet applications.
8
Module – V
Overview of Testing Tools – Need for Automated Testing Tools, Taxonomy of
Testing Tools, Functional/Regression Testing Tools, Performance Testing Tools,
Testing Management Tools, Source Code Testing Tools, How to select a Testing
Tool. WinRunner – Overview of WinRunner, Testing Applications using
WinRunner
8

Page 184 of 243
Text Books:
1. JorgensenPaul C., “Software Testing- A Craftsman’s Approach”, Second Edition, CRC Press, 2008.
2. Ammann Paul and OffuttJeff, “Introduction to Software Testing”, Cambridge University Press, Cambridge,
UK, ISBN 0-52188-038-1, 2008.
Reference Books:
1. TamresLouise, “Software Testing”, Pearson Education Asia, 2002.
2. PressmanRoger S., “Software Engineering – A Practitioner’s Approach”, Fifth Edition, McGraw-Hill
International Edition, New Delhi, 2001.
3. AggarwalK.K. & SinghYogesh, “Software Engineering”, New Age International Publishers, New Delhi,
2003 4. TamresLauise, “Introducing Software Testing”, Pearson Education
Gaps in the Syllabus (to meet Industry/Profession requirements)
13. Machine Learning in Testing
14. Big Data Testing.
15. Combining Manual and Automated Testing.
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
8. Test Automation.
9. Shortening Delivery Cycle
10. Digital Transformation with Agile.
11. Increasing Adoption of DevOps

POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
Page 185 of 243
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2 3 2 3
CO2 3 3 3 1 3 1 1 1 2 2 3 2
CO3 3 3 3 3 3 1 2 2 1 1 2 3 2 3
CO4 3 3 3 1 3 1 1 1 1 2 3 3 2
CO5 3 3 3 3 3 1 1 1 1 1 1 2 2 3 2
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD7, CD 8
CD2 Tutorials/Assignments CO2 CD1 and CD9
CD3 Seminars CO3 CD1, CD2 and CD3
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 186 of 243
Course Code: CA321
Course Title: SOFTWARE TESTING LAB
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: V/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A. Have a broad understanding of software requirements in context to end user
expectations.
B. Familiarize with testing environments and test processes.
C. Describe to the students the impact and methods to overcome programming
errors
D. Devise strategies to detect and rectify common programming errors.
E. Conceptualize the role of testing in estimating software quality.
Course Outcomes
After the completion of this course, students will be able to:
1. Understand the types and effects of errors and bugs on a software and the
testing process.
2. Apply testing strategies to detect software bugs.
3. Analyse approaches of verification and validation including static analysis,
and reviews as well as software testing approaches such as unit testing and
integration testing.
4. Evaluate the software quality and apply test suites like JUnit and selenium for
testing software.
5. Summarize best practices for coding to ensure good quality software, quality
products by applying quality metrics
Page 187 of 243
SYLLABUS
List of Programs as Assignments:
1. Why testing is required?
2. What are the types of testing?
3. What is difference between Verification and Validation?
4. Explain Principles of Software Testing.
5. What are Test Cases?
6. Overview of Graph Theory for tester.
7. Explain Boundary Value Analysis with example.
8. Explain Equivalence Class Testing with example.
9. Explain Decision Table Based Testing with example.
10. Explain Cause Effect Graphing Technique with example.
11. Explain Path testing with example.
12. Explain Cyclomatic Complexity with example.
13. What are Graph Metrics?
14. Explain Dataflow Testing with example.
15. Explain Slice based testing with example.
16. What are Testing Activities?
17. What are Levels of Testing?
18. Explain Integration Testing.
19. What is System Testing?
20. What is Regression Testing?
21. What is Extreme Testing?
22. What is Debugging?
23. Discuss the challenges and strategies of testing internet applications
24. What do you understand the Automation Testing Approach ?
25. Write and test a program to login a specific web page
26. Write and test a program to update 10 student records into table into Excel file
27. Write and test a program to select the number of students who have scored more than
60 in any one subject ( or all subjects ).
28. Write and test a program to provide total number of objects present / available on the
page.
29. Write and test a program to get the number of list items in a list / combo box.
30. Write and test a program to count number of items present on a desktop
31. Give an overview of WinRunner, Note down the Testing Applications using WinRunner.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Page 188 of 243
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Student Feedback on Faculty
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
Page 189 of 243
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Course Code: CA322
Course Title: NETWORK SECURITY
Pre-requisite(s):
Co- requisite(s):
Credits: 4 L:3 T:1 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: V/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. Able to understand the fundamentals of security algorithms currently
2. Able to understand E-mail security, PEM& S/MIME, PGP, Firewalls.
3. Have a broad knowledge of the state-of-the-art and open problems in network
security
4. Enhance their potential to do research or pursue a career in this rapidly
developing area.
5. Able to be introduced to new developing security features.
Course Outcomes
After the completion of this course, students will be able to:
1. Identify state-of-the-art and open problems in network security
2. Analyse all relevant aspects of security in networks like E-mail security,
PEM& S/MIME, PGP, Firewalls.
3. Assess the impact of Modes of Operation and problems in network
4. Summarise developing security features in networking systems and Real time
communication security
5. Design of secure system and applications
Page 190 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction to networking: OSI Reference model, Active vs Passive attacks,
Layers and cryptography, Multilevel model of security.
8
Module – II
Modes of Operation: encrypting large messages, Generating MAC’s, Multiple
Encryption DES, Hash and message digest: Using Hash for encrypting, MD2,
MD4, MD5, SHA1.
8
Module – III
Authentication Systems, Password authentication systems,
 authentication protocols, tructed
intermediates, session key establishment.
Security handshake pitfalls: mutual authentication, Integrity /
encryption of data, mediated authentication, strong password
protocols.
8
Module – IV
Real time communication security: Session key establishment, perfect forward
secrecy, DOS, clogging protection, Arranging for parallel computation, session
resumption, data steam protection, plausible deniability.
8
Module – V
E mail security, PEM& S/MIME, PGP, Firewalls.
8
TEXT BOOK
1. Kaufman Charlie, Perlman Radia and Speciner Mike, “Network Security: Private
Communication in a Public World”, 2nd Edition, Prentice Hall, 2002.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
Page 191 of 243
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Student Feedback on Faculty

Page 192 of 243
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

PROGRAM ELECTIVE V
Page 193 of 243
Course Code: CA323
Course Title: CYBER FORENSICS
Pre-requisite(s):
Co- requisite(s):
Credits: 4 L: 3 T: 1 P: 0
Class schedule per week: 04
Class: BCA
Semester / Level: VI/3
Branch: BCA
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
39. Provides an in-depth study of the rapidly changing and fascinating field of
computer forensics.
40. Combines both the technical expertise and the knowledge required to
investigate, detect and prevent digital crimes
41. Knowledge on digital forensics legislations, digital crime, forensics processes and
procedures, data acquisition and validation, e-discovery tools.
42. E-evidence collection and preservation, investigating operating systems and file
systems, network forensics, art of steganography and mobile device forensics.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Understand relevant legislation and codes of ethics.
CO2 Apply Computer forensics and digital detective and various processes, policies and
procedures.
CO3 Understand E-discovery, guidelines and standards, E-evidence, tools and
environment.
CO4 Learn the techniques of Email and web forensics and network forensics tools.
CO5 Integrate techniques to recover data from computer and hand held devices.

Page 194 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
IPsec protocols - IP Authentication header - IP ESP, Key management protocol
for IPsec, Transport layer Security: SSL protocol, Cryptography computations -
TLS protocol
8
Module – II
PGP - S/ MIME: Internet Firewalls for Trusted System: Roles of Firewalls -
firewall related terminology, Types of Firewalls, Firewall design, Honeycomb
design: Set for E-Commerce transactions
8
Module – III
Introduction to traditional cybercrime, Traditional problems associated with
cybercrime, Introduction to Identity Theft & Identity Fraud, Types of Cyber
Forensics techniques: incident & incident response
methodology, Forensics duplication & investigations, Preparation of IR: Creating
response tool kit & IR team, Forensics Technology & Systems
8
Module – IV
Processing Crime & Incident Scenes, Working with windows & DOS systems,
Current computer Forensics tools: Software/ hardware tools
8
Module – V
Validating Forensics data, Data hiding techniques, Performing Remote
Acquisition, Network Forensics, Email investigations, Cell phone & Mobile
devices Forensics
8
Text Books:
1. Albert J. Marcella Jr., & Frederic Guillossou, “Cyber Forensics: From Data to Digital Evidence”, John
Wiley and Sons, ISBN-13: 978-1118273661, 2012.
Gaps in the Syllabus (to meet Industry/Profession requirements)
NIL
Page 195 of 243
POs met through Gaps in the Syllabus
N. A.
Topics beyond syllabus/Advanced topics/Design
NIL
POs met through Topics beyond syllabus/Advanced topics/Design
N. A.
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 2 3 2 3 3 3
CO2 3 1 1 1 1 3 1 1 2 1 3 2 3 3 3
CO3 2 3 3 1 2 1 2 2 2 3 3 3 3 3
CO4 1 1 3 3 1 1 1 1 2 1 2 1 3 2 3
CO5 3 3 3 1 2 1 1 2 2 1 3 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)

Page 196 of 243
Mapping Between COs and Course Delivery (CD) methods
CD
Code Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD 8
CD2 Tutorials/Assignments CO2 CD1, CD8, CD9
CD3 Seminars CO3
CD1, CD2, CD3,
CD5
CD4 Mini Projects/Projects CO4
CD1, CD5, CD8,
CD9
CD5 Laboratory Experiments/Teaching Aids CO5
CD1, CD2, CD3,
CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 197 of 243
Course code: CA325
Course title: UNIX AND SHELL PROGRAMMING
Pre-requisite(s):
Co- requisite(s):
Credits: 4 L: 3 T: 1 P: 0
Class schedule per week: 04
Class: BCA
Semester / Level: VI/3
Branch: BCA
Course Objectives:
This course enables the students:
A. To understand concept of an Operating System.
Understand Applications and Features on Unix/Linux.
Understand the process in Linux.
Using shell as a programming language.
At Working with System Calls and Interrupts.
Course Outcomes
After the completion of this course, students will be able to:
CO 1. Understanding the design of Linux kernel components
CO 2. Experiencing the kernel by passive/active observation
CO 3. Extending the Linux kernel for understanding, self-satisfaction/falsification.
CO 4. Exploring current research trends in OS, Linux being the reference OS
CO 5. Understanding the design of Linux kernel components
SYLLABUS
MODULE
(NO. OF
LECTURE
HOURS)
Page 198 of 243
Module I :
Introduction to Unix: Introduction to operating system, Introduction to Unix,
Application of Unix, History of Unix, Features of Unix, Typical Unix Based systems,
Login and Logout procedure, Introductory commands date, cal, banner, writer, mesg,
who, passwd.
Files and Directories:Unix Architecture, kernel, shell, Utilities, Unix file system, Unix
files, type of files,File naming conventions. Unix Directories, Basic commands for
working with Directories pwd,mkdir,cd, ls, Metacharacters and wildcard, rmdir.
File Manipulations:File security and Ownership issues, Type of access to files /
directories, Determining file access permission, changing the access chmod,
chown,chgrp, File management utilities of Unix
8
Module II :
Input Output Redirection and Filters:Input/output redirection in UNIX, Input
redirection, Output redirection, standard error redirection. Pipes and Filters. Working
with Vim Editor.
Introduction to Processes: Processes in Unix, Manipulation of processes, Running
processes in the background, Terminating processes.
8
Module III :
Shell Programming - i: Features of the shell, shell as a Programming Language,
Creating and executing a shell script, shell variables, Command substitution, Local and
Global variables, Conditional execution Operators.
Shell Programming – ii: Iteration construct, The case… esacConstruct.Parameters to
shell scripts. Shifting the parameters, Listing the shell variables, Creating User define
functions.
8
Module IV :
Positioning the Cursor:tput, Interrupt handling. The awk Utility: The awk Utility, The
awk program structure, Processing Records, Logical Operators, Special Patterns, Action
statements, Print statements. Control flow statements, String and numberic functions in
awk. System calls for Low Level Input / Output. File descriptor, File I: Open, read, write
and close.
8
Module V :
File Creation: Create, Random access:Iseek, Change directoy: chdir, Determining and
changing file access, access system call, chmod system call, chown system call.
Status of files:stat, fstat. Linking and unlinking files: link, unlink. System calls for
process management: Introduction, Context of a process, Execution of Processes: exec
8
TEXT BOOK
1. MichaelRandal K., “Mastering Unix Shell Scripting”, 2nd Edition, Wiley publication.
REFERENCE BOOK
Page 199 of 243
1. VenkateshmurthyM.G., “Introduction to Unix and Shell Programming”, Paperback, Pearson. 2005.
2. COURSE OUTCOME (CO) ATTAINMENT ASSESSMENT TOOLS & EVALUATION PROCEDURE
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Advanced level of shell scripting and shell programming should be introduced.
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
1. Advanced design level questions solving skills by lab work should be incorporated.
2. Kernel compilation may be introduced.
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment –
1. Student Feedback on Faculty
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
Page 200 of 243
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course code: CA326
Course title: Unix and Shell Programming Lab
Pre-requisite(s): C/C++; Knowledge of programming languages
Co- requisite(s): OS Lab
Credits: 2 L:0 T:0 P: 2
Class schedule per week: 04
Class: Bachelor of Computer Applications
Semester / Level: II/1
Branch: BCA
Course Objectives
This course enables the students:
Course Objectives
This course enables the students:
A. To understand the basic concepts of UNIX & shell programming
B. To understand the structure of a file system.
C. To explore the function of a kernel.
D. Use a UNIX text editor to create a shell script and run scripts effectively from the command
line
Page 201 of 243
Course Outcomes
After the completion of this course, students will be able to:
1. Will be able to describe and use the UNIX operating system.
2. Will be able to describe and use the fundamental UNIX system tools and utilities.
3. We will able to describe and write shell scripts in order to perform basic shell programming.
4. Will be able to describe and understand the UNIX file system
SYLLABUS
1. Write a shell script to check if the number entered at the command line is prime or not.
2. Write a shell script to modify “cal” command to display calendars of the specified months.
3. Write a shell script to modify “cal” command to display calendars of the specified range of months.
4. Write a shell script to accept a login name. If not a valid login name display message “Entered login name is
invalid”.
5. Write a shell script to display date in the mm/dd/yy format.
6. Write a shell script to display on the screen sorted output of “who” command along with the total number of
users.
7. Write a shell script to display the multiplication table of any number.
8. Write a shell script to compare two files and if found equal asks the user to delete the duplicate file.
9. Write a shell script to find the sum of digits of a given number.
10. Write a shell script to merge the contents of three files, sort the contents and then display them page by
page.
11. Write a shell script to find the LCD(least common divisor) of two numbers.
12. Write a shell script to perform the tasks of basic calculator.
13. Write a shell script to find the power of a given number.
14. Write a shell script to find the greatest number among the three numbers.
15. Write a shell script to find the factorial of a given number.
16. Write a shell script to check whether the number is Armstrong or not.
TEXT BOOK
1. MichaelRandal K., “Mastering Unix Shell Scripting”, 2nd Edition, Wiley publication.
REFERENCE BOOK
1. VenkateshmurthyM.G., “Introduction to Unix and Shell Programming”, Paperback, Pearson. 2005.
2. COURSE OUTCOME (CO) ATTAINMENT ASSESSMENT TOOLS & EVALUATION PROCEDURE
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Incorporation of advance level of shell scripting and shell programming may be done to meet industry
requirement.
Page 202 of 243
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
1. Advanced design level questions solving skills by lab work should be incorporated.
2. Kernel compilation may be introduced.
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
Page 203 of 243
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 204 of 243
PROGRAM ELECTIVE VI
Course Code: CA327
Course Title: System Programming
Pre-requisite(s):
Co- requisite(s): None
Credits: 4 L: 3 T: 1 P: 0
Class schedule per week: 04
Class: BCA
Semester / Level: VI/3
Branch: BCA
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
43. Describe the utility of different system programs & system tools.
44. Familiarize with the trade-offs between run-time and compile-time processing
(Linking & Loading techniques).
45. To learn the concepts and techniques behind the designing of various system
software.
46. To organize the functionalities & components of system software & tools into
different layers for efficient code generation.
47. Understand the designing of text editors, debuggers etc.
Course Outcomes
After the completion of this course, students will be able to:
CO1 Elaborate the evolution of various system software.
CO2 Define various data structures that helps in the proper functioning of the system
programs.
CO3 Analyse basic design of various system software.
CO4 Apply functionalities & components of system software & tools into different layers
for efficient code generation.
CO5 Development and designing of text editors, debuggers etc.

Page 205 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I
Introduction: Evolution of the Components of a Programming System,
Assemblers, Loaders, Macros, Compilers, Linkers, Overview of Machine
Language.
8
Module – II
Instruction Addressing and Execution: Evolution of Operating Systems,
Features of an Operating System, The BIOS Boot Process, The System Program
Loader, Stack, Instruction Execution and Addressing, Instruction operands,
protected Mode.
8
Module – III
Assemblers: Overview of Assembly Language, Assembly Language Features,
Conventional Segment Directives, Assembly Process, Single Pass Assembler,
Design of a 2-Pass assembler for 8088.
8
Module – IV
Macros & Macro Processors: Macros, Different forms of Macros, Macros using
AIF, AGO, REPT. Etc., Design of a Macro Processor, Macro Assembler. Loaders:
Basic Loader Functions, Absolute Loader, Compile & go Loader, Relocating
Loader, Direct Linking Loader.
8
Module – V
Linkage Editors: Linking and Relocation, Program Relocatability, Linkage
Editor and its Application in IBP-PC, Linking for Program Overlays. Software
Tools: Spectrum of Software Tools, Text Editors, Interpreter and Program
Generators, Debug Monitors, Programming Environments.
8

Page 206 of 243
Text Books:
1. DhamdhereD.M., “System Programming and Operating Systems”, 2nd Edition., TMH, New Delhi.
Reference Books:
1. AbelPeter, “IBM PC Assembly Language and Programming”, 5th Edition, PHI, New Delhi-2003.
2. 2. DonovanJ.J., “System Programming”, TMH, New Delhi.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Application of macros in Language processing system .
2. Application of text editors.
POs met through Gaps in the Syllabus
3, 5
Topics beyond syllabus/Advanced topics/Design
1. Algorithm for Single Pass Assembler and 2-Pass assembler.
2. Utility of system software for efficient code generation.
POs met through Topics beyond syllabus/Advanced topics/Design
2, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
Page 207 of 243
CO1 3 3 3 2 1 1 2 2 1 1 3 2 2 3 3
CO2 3 1 1 1 1 3 1 1 1 2 1 1 2 3 1
CO3 2 3 3 1 2 1 2 2 2 1 3 1 3 2 2
CO4 1 1 3 3 1 1 1 1 1 1 2 2 3 1 2
CO5 3 3 3 1 2 1 1 2 1 2 1 1 2 3 1
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1 CD5, CD8 and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 208 of 243
Course code: CA328
Course title: DISTRIBUTED DATABASE SYSTEMS
Pre-requisite(s):
Co- requisite(s): None
Credits: 4 L: 3 T: 1 P: 0
Class schedule per week: 04
Class: BCA
Semester / Level: VI/3
Branch: BCA

Course Objectives
This course enables the students to:
1. Introduce principles and foundations of distributed databases
2. Learn concepts related to architecture, design issues, integrity control, query
processing
3 Understand the concept of a database transaction and related database facilities,
including concurrency control, backup and recovery
4. How to interpret the modeling symbols for the most popular ER modeling tools.
And real-world database design which often involves conflicting goals.
5. Know the role of the database administrator and data object locking and protocols in
distributed databases
Course Outcomes
After the completion of this course, students will be able to:
1. Understand and successfully apply logical database design principles, including
E-R diagrams and database normalization.
2. Design and implement a small distributed database project
3 Interpret the modeling symbols for the most popular ER modeling tools in context to
real-world database design which often involves conflicting goals.
4. Describe and discuss selected advanced database topics like the data warehouse.
5. Apply optimization, transactions, and concurrency control in distributed
environment.
Page 209 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module I:
Introduction: Distributed Data Processing, What is a Distributed Database
System? Promises of DDBSs, Problem Areas.
8
Module II:
Distributed DBMS Architecture: DBMS Standardization, Architectural Models
for Distributed DBMSs, Distributed DBMS Architecture.
Distributed Database Design: Alternative Design Strategies, Distribution Design
Issues, Fragmentation, Allocation.
8
Module III:
Overview of Query Processing: Query Processing Problem, Objectives of Query
Processing, Complexity of Relational Algebra Operations, Layers of Query
Processing.
Query Decomposition and Optimization: Query Decomposition, Query
Optimization, Centralized Query Optimization, Distributed Query Optimization
Algorithms.
8
Module IV:
Transaction Management and Concurrency Control: Definition of a
Transaction, properties of Transactions, Serializability Theory, Taxonomy of
Concurrency Control Mechanisms, Locking-based Concurrency Control
Algorithms, Timestamp-based Concurrency Control Algorithms, Deadlock
Management.
8
Module V:
Distributed DBMS Reliability: Reliability Concepts and Measures, Failures and
Fault Tolerance in Distributed Systems, Failures in Distributed DBMS, Local
Reliability Protocols, Distributed Reliability Protocols.
8
TEXT BOOK
Page 210 of 243
1. OzsuM. Tamer, ValduriezPatrick, “Distributed Database Systems”, 2nd Edition, Pearson, 2011.
REFERENCE BOOKS
1. NavatheElmasri, “Fundamental of Database Systems”, 5th Edition, Pearson Education, 2008.
2. ConnollyThomas, BeggCarolyn, “Database Systems – A Practical Approach to Design, implementation
and Management”, 4th Edition, Pearson Education, 2008.
3. Silberschatz, Korth, &Sudarshan, “Database System Concepts”, 4th Edition, McGraw Hill, 2002.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Network topology
2. Communication Schemes
3. Semantic Data Control
4. Join Ordering in fragments
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
1. Parallel Database System
2. Distributed Object DBMS
3. Data delivery alternatives
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Page 211 of 243
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2 2 3 1
CO2 3 3 3 1 3 1 1 1 2 3 2 2
CO3 3 3 3 3 3 1 2 2 1 1 2 3 2 2
CO4 3 3 3 1 3 1 1 1 1 2 3 2 1
CO5 3 3 3 3 3 1 1 1 1 1 1 2 2 3 2
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CD
Code Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD7, CD 8
CD2 Tutorials/Assignments CO2 CD1 and CD9
CD3 Seminars CO3 CD1, CD2 and CD3
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 212 of 243
Course code: CA331
Course title: DECISION SUPPORT SYSTEM
Pre-requisite(s):
Co- requisite(s): None
Credits: 4 L: 3 T: 1 P: 0
Class schedule per week: 04
Class: BCA
Semester / Level: VI/3
Branch: BCA

Course Objectives
This course enables the students:
A. To understand the basic components of DSS
B. To learn different phases and models for Decision making
C. To understand how to create a distributed database using fragmentation.
D. To learn transaction processing in a distributed environment.
E. To understand how concurrency control is performed in a distributed environment.
Course Outcomes
After the completion of this course, students will be able to:
1. Discuss the basic components of DSS
2. Classify the different phases and models for Decision making
3. Design a DSS according to the requirements.
4. Model and develop different levels in DSS using Software engineering principles
5. Analyse the system with pros and cons.

Page 213 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module I:
Introduction to DSS:
Definition. Types of DSS. Data and Model Management. DSS Knowledge Base.
User interface. The DSS user. Categories and classes of DSS.
8L
Module II:
Decision and Decision-makers:
Definition. Types of decision. Different levels of Decision makers in the
organization and their requirement. Decision effectiveness. Simon’s model of
decision making. Rational decision making. Bounded rationality. Biases and
heuristics in decision making.
8L
Module III:
Group Decision Support System (GDSS):
Group decision making. GDSS modeling. Brainstorming process. MDM support
technologies. Managing MDM activities. System perspective of a DSS: DSS in
the context of information system. Information quality issues in DSS design. Role
of internet in DSS development.
8L
Module IV:
Designing and building DSS:
Strategies for DSS analysis and design. The DSS developer. Tools for DSS
development. Implementing and Integrating DSS: DSS implementation. System
evaluation. The importance of integration.
8L
Module V:
Intelligent Decision Support system:
The intelligence of Artificial Intelligence. Future of Expert and Artificial
Intelligence. Knowledge acquisition for Expert Systems. Future of Intelligent
8L
Page 214 of 243
Software Agents and Delegation.
TEXT BOOK
2. MarakasGeorge M., “Decision Support Systems in the 21st century”, Pearson education.
REFERENCE BOOKS
4. TurbanEfraim, “Decision Support Systems and Intelligent Systems”, Pearson Education.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Adoption of Information System
2. Selection of Strategy
3. Optimization Methods
POs met through Gaps in the Syllabus
3, 4, 12
Topics beyond syllabus/Advanced topics/Design
1. Model Development
2. Use of AI for Decision Making
POs met through Topics beyond syllabus/Advanced topics/Design
2, 3, 4, 12
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Page 215 of 243
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 1 3 1 1 1 2 2 3 1
CO2 3 3 3 1 3 1 1 1 2 3 2 2
CO3 3 3 3 3 3 1 2 2 1 1 2 3 2 2
CO4 3 3 3 1 3 1 1 1 1 2 3 2 1
CO5 3 3 3 3 3 1 1 1 1 1 1 2 2 3 2
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CD
Code Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD7, CD 8
CD2 Tutorials/Assignments CO2 CD1 and CD9
CD3 Seminars CO3 CD1, CD2 and CD3
CD4 Mini Projects/Projects CO4 CD1 and CD2
CD5 Laboratory Experiments/Teaching Aids CO5 CD1 and CD2
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation

Page 216 of 243
PROGRAM
ELECTIVES(LIST OF
SKILL DEVELOPMENT
COURSES)
Page 217 of 243
PROGRAM ELECTIVE(SECI)
PROGRAM ELECTIVE (SECI)
Course Code: 180
Course Title: OFFICE AUTOMATION TOOLS
Pre-requisite(s):
Co- requisite(s):
Credits: 3 L:3 T:0 P:0
Class schedule per week: 04
Class: BCA
Semester / Level: I/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
1. To learn automation tools
2. To understand the basic of basic technology
3. To learn the problem-solving process through computer.
4. To know the limitations of automation
5. To know the practical application of various automation tools
Course Outcomes
After the completion of this course, students will be able to:
CO1 To solve real time problems using automation tools
CO2 To translate the real time problem into automation problem
CO3 To analyse the basic application of automation tools.
CO4 To apply different tools for different automation problems
CO5 To decompose a real-time problem into a small automation problems.

Page 218 of 243
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I

COMPUTER SCIENCE & OPERATING SYSTEMS
(WINDOWS/LINUX)
Types of Computer: Analog, Digital, and Hybrid type,
Hardware, Software, System software, Application software,
Stored Program Concept and Von Newman Architecture, Firm
ware, Human ware, Stored Program Concept, Evolution of
computers, Generation of computer.
Data Processing: Data collection, Classifications, Sorting and
Merging, Processing, Summarizing Storing.
Data Organisation: Organization Data, Character, Field,
Record, File, Database, Sequential Access, Random Access,
Indexed Sequential Access.
Data Communication: Local Area Network, Wide
Area Network, Satellite Communication, Internet.
Operating System: Introduction, Different Operating Systems,
Loading and Quitting the Operating Systems Important
DOS/Windows/Linux Commands.
10
Module – II
WINDOWS/Linux
1. Windows Introduction,
2. Concepts different Operating System GUI/CUI.
3. Desktop Icons. (Windows / Desktop Linux)
4. My Computer, Recycle Bin, Internet Explorer, Network
Neighbourhood, My Documents
5. Working with windows: How to create a Folder, Copying and
cutting files, Renaming
6. Programs, Favourites, Documents, Settings, Find, Run, Shut down
7. APPLICATION ICONS
8. Introduction to Output Devices
10
Module – III
PERSONAL COMPUTER SOFTWARE TOOLS (MS WORD, EXCEL
1. Open Office Word Processing using MS WORD: An
introduction to MS-Word / ON INTRODUCTION TO
WORD/Writer.
2. The Word work space, Starting and quitting word,
Creating and Manipulating Various documents, Editing
7
Page 219 of 243
of proofing files, Merging documents and macros.
3. How to use Mouse and Menu, Working with dialog box
4. Primary Command in File Menu: The Open Commands,
The File name commands, The New commands, The
Save, Save As, and Save all commands, The Close
command, The Page setup, The Print commands, The
Exit commands
5. Edit Menu commands: The Cut, Copy, and Paste
commands, The Undo and Repeat commands
6. Format commands: Font commands, Paragraph commands
7. Other Menu: The view menu, The Insert menu, The tool
menu, The table menu, The Window menu
Module – IV
EXCEL
1. BUILDING A SIMPLE WORKSHEET
2. Entering Text, Entering Values, Entering
 Dates and Times, Moving
Around, Selecting Ranges, Using Menu, Using
3. Tool Bar, Using Shortcut Menus, Changing Entries,
Copying Entries, Moving Entries, Inserting and Deleting
cells
4. FORMATTING BASICS
5. Changing Character Style, Changing Alignment, Changing Column
Width
6. WORKING WITH MULTIPLE WORKSHEET
7. Copying entries between work books, Moving sheets
between work books, Deleting sheets, Quitting Excel
8. OPENING EXISTING WORKBOOKS
9. Simple calculations, Doing Arithmetic, Totalling column
of values, Naming cells and Ranges
10. FORMATTING TEXT
11. Displaying dollars and cents, Formatting decimal places,
dates Format, Copying style and formats
12. FORMULAS THAT MAKE DECISIONS
13. Using the IF function, Using the nested IF function, Copying
formulas
14. Checking Spelling, Printing Worksheets, Preview Worksheets,
Setting up the pages,
15. Sorting data, Keeping Leading in View, Finding records,
Adding and deleting Records, Filtering Records
16. Plotting charts, Sizing and moving charts, Updating
charts, changing the chart type, Using chart auto format
17. Creating Macros, Recording Macros, Running Macros
8
Module – V
POWER POINT
5
Page 220 of 243
1. Main Features of Power Point
2. MAKING THE PRESENTATION
3. Creating Template with the Auto Content Wizard.
Creating a Presentation with a Template. Creating a
presentation from Scratch
4. DIFFERENT VIEWS
5. Normal Slide, Outline, Slide Sorter, Slide Show, Notes, Slide Master
6. ANIMATION, ART AND SOUND
7. Controlling Transitions between slides.
Animating Different Parts of a slide. Inserting a Motion Clip.
8. Sounds in slides.
9. INCLUDING GRAPHS, CHARTS, TABLES AND COLUMNS
10. Organization Chart Slide, Creating a table Slide.
Creating two column Slide, Module 1: Showing A
Presentation,
11. Rehearsing/ Timing a Presentation, Designation some
slides as “Hidden”, Viewing Slides Anywhere in a Slide
Show.
12. Techniques for Making a Show Livelier
13. OFFICE CONNECTIONS
14. Presenting with the help of other Office Programs
Importing the text from a World Document.
15. Printing a Presentation
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Introduction to graphics and animation tool.
2. Multimedia Introduction.
POs met through Gaps in the Syllabus
1,2,3,4
Topics beyond syllabus/Advanced topics/Design
3. Animation.
4. App development.
POs met through Topics beyond syllabus/Advanced topics/Design
 3, 5, 7, 8,
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure

Page 221 of 243
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Mid Semester Examination 25
Second Quiz 10
Teacher’s Assessment 5
End Semester Examination 50
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
Page 222 of 243
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
PROGRAM ELECTIVE (SEC-II)
Course Code: CA181
Course Title: DESIGNING AND PUBLISHING IN COMPUTER USING PAGEMAKER,
PHOTOSHOP AND CORELDRAW LAB.
Pre-requisite(s): C/C++; Knowledge of programming languages
Co- requisite(s):
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: II/1
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A Able to create a new document using page maker
B Learn the advantages of PageMaker
C To understand the idea of Photoshop
D To know the applications of PageMaker and Photoshop.
E To understand the basic concepts of coral draw
Course Outcomes
After the completion of this course, students will be able to:
1 Identify the application of Photoshop, coral draw and PageMaker
2 Apply the basic idea of PageMaker to create and modify a page
3 To analyse a photo using Photoshop
4 Apply PageMaker to manage a page in better way
5 Create a template to solve a real time problem

Page 223 of 243
SYLLABUS
1. PAGEMAKER
2. INTRODUCTION
i. Introduction to Desk Top Publishing, Introduction to Page Maker Advantages, Using
the Mouse, Components of the Page Maker Window
3. CREATING A NEW DOCUMENT
i. Setting the Margins, Setting the Page Size, Changing the page Orientation, Setting
Page Numbers, Changing the Page Size view, Creating New Document Windows:
Displaying the Rulers, Changing the Rulers, Using Rulers, Using Guidelines,
Positioning Guidelines., Adding Guidelines to Master Pages. Aligning to Guidelines,
Displaying Guidelines, Locking Guidelines. Formatting Types: Changing Font
Families, Changing Fond Sizes, Changing Typeface Style, Changing Character
Specifications: Changing Type leading, Changing Character Widths, Changing
Tracking, Changing Type Options. Saving Your Document: Saving a new Document,
Saving an existing Document, Saving a Document as another document, Reverting to a
Previously Saved Version. Developing Paragraphs: Typing Text, Adding special
Characters to Text, Aligning Text. Formatting paragraphs: Changing Indents,
Changing the space around Paragraphs, Changing paragraph Alignment, controlling
How Paragraphs Break Between Pages and Columns, Adding lines Above or Below
Your Paragraphs.
4. INTRODUCTION TO CREATING FRAMES
i. Converting Other Objects to Frames, Threading and Unthreading Text. Threading
additional Text, Threading Text to Different Page, Unthreading Text Blocks,
Rethreading Text Blocks, Making Text Blocks Disappear Without Deleting them,
Selecting and Dragging Text, Editing Deleting Text, Cut, Copying, Pasting Text,
Viewing the Contents of Clipboard, Using Undo and Revert. Inserting and Removing
Pages: Inserting and Removing Pages, Adjusting Spacing of Characters, Words, Lines
Adjusting, Spacing and Leading, Setting and changing Tabs.
5. Introduction to Auto Flow, page maker Plug-Ins, Drop Cap, Change Case, Bullets and Numbering.
6. ADDING DESIGN ELEMENTS- INTRODUCTION
i. Adding Graphics to your Document, Adding Lines, Changing Lines Specifications,
Adding Shapes, changing Shape specifications, Changing Line and fill, Specifications
together (Fill and Stroke), Changing Round Corners, Creating Drop-Shadow, Boxes,
Text wrap, Changing page maker Options: Adjusting Margins, Setting and Adjusting
Columns, Setting Unequal Width Columns, Creating headers and Footers, Creating
Graphics in page maker, Rotating Text, Skewing and Mirroring objects with Control
Palette. Importing Graphics into page maker: Placing, Sizing, aligning Graphics,
Cropping Graphics.
7. SETTING UP TEMPLATES
i. Setting Up Master Page Templates, Creating Custom Page Sizes, Creating Custom
Boarders, Creating a News Paper Template, Creating New master Pages, Saving an
existing Page As a Master Page. Setting UP Custom Styles: Defining Styles, Creating,
Editing, Removing Styles and Copying Styles.
8. Introduction to Using layers
TEXT BOOK
1. KumarArchana, “Computer Basics with office Automation”, IK International Publishing,2010,
Page 224 of 243
ISBN 9789380578620.
REFERENCE BOOK
1. Prof. JainSatish, Kratika, GeethaM., “BPB's Office 2010 Course Complete Book For Learning
Better And Faster”.
Lab Section [ each Day 50 mints x 2 = 100 mints]
1.Installation of Operating Systems
2. Working with Windows Operating system.
3. Get familiar with Linux Operating.
4. Lab in MS-Word/ Writer
5. Document formatting in word/Mail Merge
6. Printing in Word.
7. Lab in MS-Excel
8. Formatting in Excel
9. Working with Multiple worksheet/Formulas/Sorting /Filtering
10. How to configure a Samba Server
11. Graphs in Excel.
12. Introduction to Desk Top Publishing.
13. Creating documents using Adobe Photoshop.
14. Lab in Photoshop.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Page 225 of 243
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 226 of 243
Course Code: CA280
Course Title: HTML PROGRAMMING
Pre-requisite(s):
Co- requisite(s): Problem Solving And Programming In Html, Xml. Servlet , Jsp
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: I/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A Able to understand the basic concepts of HTML
B Learn the advantages of HTML
C To understand the structure of HTML page
D To know the applications of HTML
E To understand the difference between HTML with other language
Course Outcomes
After the completion of this course, students will be able to:
1 Able to create a HTML page
2 Able to analyse a HTML page
3 Able to modify a HTML page
4 Able to create a HTML page using table, background and picture.
5 Able to use CSS for a HTML page.
SYLLABUS

MODULE
(NO. OF
LECTURE
HOURS)
Module – I

Introduction (1L): HTML Document structure
The Basics (2L): Head, Body, Lists: ordered & unordered
8
Module – II
8
Page 227 of 243
Links (3L): Introduction, Absolute links & Relative links, using the ID
attribute to link within a document
Module – III
Images (2L): Putting an image on a page, using images as links, putting an image
in the background
8
Module – IV
Tables (3L): Creating a table, Table headers, spanning
multiple columns, styling table Forms (3L): Basic input and
attributes, other kinds of inputs, styling forms with CSS
8
Module – V
PHP Programming
Introduction to PHP: PHP introduction, important tools & s/w
requirement, Scope of PHP, Basic syntax, variable & constants, data type,
expressions, scope of variables, operators.
Handling HTML form with PHP: Capturing form data, GET and POST
methods, Dealing with multi value fields, Redirecting a form after submission
PHP conditional events & loops: PHP conditional statements, switch case, while,
for and do … while loops
PHP functions: Need of function, Default argument, Functions call by
value and call by reference String Manipulation & regular expression:
Creating and accessing string, Searching & replacing string, formatting,
joining and splitting String, String related library functions
Array: Creating index based and Associative array
S/w Lab based on PHP:
a) Create a PHP login page having user name and password. On
clicking submit button, a Welcome message should be displayed if
the user is already registered otherwise error message should be
displayed.
b) Create a “birthday countdown” script which will count the number
of days between current day and birthday.
8
Text Books:
1. “Introduction to HTML and CSS”, O’Reilly, 2010.
2. DuckettJon, “HTML and CSS”, John Wiley, 2012.
S/w Lab based on HTML:
1. Create an HTML document with the following formatting options:
a. Text formatting
Page 228 of 243
b. Heading styles
c. Font (Type, size and color)
d. Background (colored background and image in background)
e. Paragraph/ Division
2. Create a HTML document which consists of
a. Ordered List
b. Unordered List
c. Nested List
d. Image
3. Create a HTML document which implements internal/ external linking
4. Create a table with the view
5. Create a form using HTML tags which has the following type of controls:
a. Text Box
b. Option/ radio buttons/ Check box
c. Reset and Submit buttons
d.
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course Program Outcomes (POs) Program
Page 229 of 243
Outcome Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
PROGRAM ELECTIVE (SEC-III)
Course Code: CA281
Course Title: PROGRAMMING IN VISUAL BASIC/GAMBAS
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: I/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
Page 230 of 243
This course envisions to impart to students to:
A Able to understand the basic concepts of Visual Basic
B Learn the advantages of Visual Basic
C To understand the structure of Visual Basic
D To know the applications of Visual Basic L
E To understand the difference between Visual Basic with other language
Course Outcomes
After the completion of this course, students will be able to:
1 Able to create a Visual Basic project
2 Able to solve real-time problem using Visual Basic
3 Able to analyse any logical and numerical problems using Visual Basic
4 Able to create a form using Visual Basic
5 Able to create an application using frontend and backend

Page 231 of 243
NEXT
SYLLABUS
List of Programs as Assignments:
1. Print a table of numbers from 5 to 15 and their squares and Cubes.
2. Print the largest of three numbers.
3. Find the factional of a number n.
4. Enter a list of positive numbers terminated by zero. Find the sum and average of these
numbers.
5. A person deposits Rs. 1000 in a fixed account yielding 5% interest. Complete the
amount in the account at the end of each year for n years.
6. Write a VB application to choose your hobbies from a list.
7. Read n numbers. Count the number of negative numbers, positive numbers and zeroes
in the list. Use arrays.
8. Read a single dimension array. Find the sum and average of these numbers.
9. Read a two dimension array. Find the sum of two 2D Array.
10. Create a database Employee and Make a form in VB 6.0 to allow data entry to
Employee Form with the following command buttons:
Employee Form
Employee Id
Employee Name
Date of Joining
Designation
Department
Address
Basic Pay
CANCEL
ADD
DELETE
SAVE
LAST
FIRST
PREVIOUS
Page 232 of 243
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
Page 233 of 243
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Course Code: CA284
Course Title: PROGRAMMING IN SCI LAB
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: I/2
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course envisions to impart to students to:
A Able to understand the basic concepts of SCILAB
B Learn the advantages of SCILAB
C To understand the structure of SCILAB
D To know the applications of SCILAB
E To understand the difference between SCILABwith other language
Course Outcomes
Page 234 of 243
After the completion of this course, students will be able to:
1 Able to write a SCILAB program
2 Able to solve real-time problem using SCILAB
3 Able to analyse any logical and numerical problems using SCILAB
4 Able to create a function using SCILAB
5 Able to create an 3D histogram using 3D histogram
SYLLABUS
List of Programs as Assignments:
1. Write a program in scilab to input an one dimensional array
and a 2D array in the console.
2. Write a program in scilab to input a zero array.
3. Write a program in scilab to Input an identity array.
4. Write a program in scilab to input a variable.
5. Write a program in scilab to use the Plot function for drawing a sine wave.
6. Write a program in scilab for 3D ploting using surf function.
7. Write a program in scilab to use the scf and clf function.
8. Write a program in scilab to show the use of histplot.
9. Write a program in scilab to find the area of triangle.
10. Write a program in scilab to find the area of a rectangle.
11. Write a program in scilab to find the addition of two simple 1D array.
12. Write a program in scilab to find all the possible operations on array.
13. Write a program in scilab to find the length of an array.
14. Write a program in scilab to demonstrate the use of matplot function.
15. Write a program in scilab to show the use of champ function.
16.. Write a program in scilab for random number
generation using all the function possible in scilab for
random number generation.
17. Write a program in scilab to show the use of plot2d2 function.
18. Write a program in scilab to show the use of plot2d3 function.
19. Write a program in scilab to show the use of plot2d4 function.
20. Write a program in scilab to show the use of LineSpec function.
21. Write a program in scilab to find the perimeter of parallelogram.
Page 235 of 243
22. Write a program in scilab to find the volume of an sphere.
23. Write a program in scilab to find the possible operations on complex numbers.
24. Write a program in scilab to find the division of a complex number.
25. Write a program in scilab to display maximum among five numbers.
26. Write a program in scilab to show the animation using comet function.
27. Write a program in scilab to show the animation using paramfplot2d function.
28. Write a program in scilab to show the 3D histogram.
29. Write a program in scilab to calculate the nature of roots of a quadreatic
equation. Input data from user.
30. Write a program in scilab to perform the operation on data Through File Reading and
Writing.
Gaps in the Syllabus (to meet Industry/Profession requirements)
1. Applications based on have not been discussed
2. Problem based on graph has been discussed.
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome Program Outcomes (POs)
Program
Specific
Outcomes
Page 236 of 243
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 237 of 243
PROGRAM ELECTIVE (SEC-IV)
Course Code: CA380
Course Title: TALLY SOFTWARE (ACCOUNTING AND FINANCETALLY ERP)
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: V/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course enables the students to:
A Able to understand the basic concepts of TALLY
B Learn the advantages of TALLY
C To understand the structure of TALLY
D To know the applications of TALLY IN accounting
E To understand the difference between TALLY with other language
Course Outcomes
After the completion of this course, students will be able to:
1 Able to write a TALLY program
2 Able to solve real-time problem using TALLY
3 Able to analyse any logical and numerical problems using TALLY
4 Able to create a function using TALLY
5 Able to create an accounting software.
Page 238 of 243
SYLLABUS
1. How would you create a computer in Tally.
2. How would you create a Ledger, Group in Tally.
3. How would you display ,alter & delete the Ledger.
4. Describe the process of entering Vouchers
5. Contra, Payment, Receipt, Journal, Sales, Purchase.
6. How would you display ,alter & delete the Vouchers
7. Describe the various options of reports
8. Day Books Cash and Bank & Ledgers Books
9. How would you display Trail Balance, Profit & Loss Statement.
10. Balance Sheet in columns and rows.
11. How would you cost categories with cost centers in tally
12. Various options in tally shortcut or Function Key
13. Various options printing reports in Tally.
14. Understand by cash flow and fund flow in tally
15. Describe the Accounts with Inventory company in Tally
16. Create a Stock, Stock Unit & Alternate units, Stock Group & Stock Item
17. Describe the sales voucher, Sales invoice and purchase invoice.
18. How would you display stock group and stock item.
19. How would you sales & purchase with tax Auto calculation
20. Sales bill with auto discount calculation
21. Employee payroll in tally.
22. How would you delete a company, Modify company.
Text Books:
Reference Books:
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure

Page 239 of 243
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
Page 240 of 243
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation
Page 241 of 243
Course Code: CA381
Course Title: PHOTO SHOP LAB
Pre-requisite(s):
Co- requisite(s):
Credits: 2 L:0 T:0 P:2
Class schedule per week: 04
Class: BCA
Semester / Level: V/3
Branch: Bachelor of Computer Applications
Name of Teacher:
Course Objectives
This course enables the students to:
A Able to understand the basic concepts of Photo Shop
B Learn the advantages of Photo Shop
C To understand the structure of Photo Shop
D To know the applications of Photo Shop
E To understand the difference between Photo Shop with other related
softwares
Course Outcomes
After the completion of this course, students will be able to:
1 Able to analyze any photo using Photo Shop
2 Able to apply use layer masks, filters and blending modes
3 Able to create, edit and work with text
4 Able to Design layouts for web pages, Paper Adverts, Brouchers, CD
Covers, Package Designing
5 Able to create new layers and perform other basic layer functions
Page 242 of 243
SYLLABUS
1. Interface Photoshop and workspace, Document setup width height & resolution.
2. What are the kinds of Tools in the toolbox? ( Tool Palette and Interface - The
Tool Palette - Painting and Editing - Custom Brushes)
3. Using selection tools, transform, marquee, crop, lesso, magic wand, eraser etc.(
Basic Photo Corrections - Rotating, Scaling, and Distorting with Transformations -
Feathering and Info Palette - Understand Resolution - Touch up Tools)
4. What are foreground and background colors?
5. How do you change the size of a picture?
Text Books:
Reference Books:
Gaps in the Syllabus (to meet Industry/Profession requirements)
POs met through Gaps in the Syllabus
Topics beyond syllabus/Advanced topics/Design
POs met through Topics beyond syllabus/Advanced topics/Design
Course Outcome (CO) Attainment Assessment Tools & Evaluation Procedure
Direct Assessment
Assessment Tool % Contribution during CO Assessment
First Quiz 10
Second Quiz 10
Viva voce 20
Day to day performance 30
Exam Evaluation performance 30
Indirect Assessment
Page 243 of 243
1. Students’ Feedback on Course Outcome.
Mapping of Course Outcomes onto Program Outcomes
Course
Outcome
Program Outcomes (POs)
Program
Specific
Outcomes
(PSOs)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
CO1 3 3 3 2 1 1 2 2 1 1 1 1 1 2 2
CO2 3 1 1 1 1 3 1 1 2 1 1 2 3 2 3
CO3 2 3 3 1 2 1 2 2 1 1 1 2 2 2 3
CO4 1 1 3 3 1 1 1 1 1 1 1 1 2 3 3
CO5 3 3 3 1 2 1 1 2 1 1 2 1 1 2 3
Correlation Levels 1, 2 or 3 as defined below:
 1: Slight (Low) 2: Moderate (Medium) 3: Substantial (High)
Mapping Between COs and Course Delivery (CD) methods
CDCode Course Delivery Methods Course
Outcome
Course Delivery
Method Used
CD1 Lecture by use of Boards/LCD Projectors CO1 CD1, CD8
CD2 Tutorials/Assignments CO2 CD1, CD8 and CD9
CD3 Seminars CO3 CD1, CD2 and CD5
CD4 Mini Projects/Projects CO4 CD1, CD5, CD8and CD9
CD5 Laboratory Experiments/Teaching Aids CO5 CD1, CD2 and CD9
CD6 Industrial/Guest Lectures
CD7 Industrial Visits/In-plant Training
CD8 Self- learning such as use of NPTEL Materials and
Internets
CD9 Simulation 